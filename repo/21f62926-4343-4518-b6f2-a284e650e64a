// attr()/text() v2
// eslint-disable-next-line
function attr(docOrElem,selector,attr,index){var elem=index?docOrElem.querySelectorAll(selector).item(index):docOrElem.querySelector(selector);return elem?elem.getAttribute(attr):null;}function text(docOrElem,selector,index){var elem=index?docOrElem.querySelectorAll(selector).item(index):docOrElem.querySelector(selector);return elem?elem.textContent:null;} 


function detectWeb(doc, url) {
	if (url.includes('/bioc/html/')) {
		return "computerProgram";
	}
	else if (url.includes('/search/index.html') && getSearchResults(doc, true)) {
		return "multiple";
	}
	else {
		return false;
	}
}


function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('dl>dt>a[href*="/bioc/html/"]');
	for (let i = 0; i < rows.length; i++) {
		let href = rows[i].href;
		let title = ZU.trimInternal(rows[i].textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}


function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (!items) {
				return;
			}
			var articles = [];
			for (var i in items) {
				articles.push(i);
			}
			ZU.processDocuments(articles, scrape);
		});
	}
	else if (detectWeb(doc, url) == "computerProgram") {
		scrape(doc, url);
	}
}


function scrape(doc, url) {
	var item = new Zotero.Item('computerProgram');
	item.title = text(doc, '#PageContent > h1');
	var subtitle = text(doc, '#PageContent > div.do_not_rebase > h2');
	if (subtitle) {
		item.title += ": " + subtitle;
	}
	var doi = ZU.xpathText(doc, '//*[@id="PageContent"]/div[2]/a[contains(@href, "https://doi.org/")]');
	if (doi !== null) {
		item.extra = 'DOI: ' + doi;
	}
	var rows = doc.querySelectorAll('#PageContent > div.do_not_rebase > p');
	for (let i = 0; i < rows.length; i++) {
		if (ZU.trimInternal(rows[i].textContent).startsWith('Bioconductor version:')) {
			item.company = ZU.trimInternal(rows[i].textContent);
			item.abstractNote = ZU.trimInternal(rows[i + 1].textContent);
		}
		if (ZU.trimInternal(rows[i].textContent).startsWith('Author')) {
			var authorString = ZU.trimInternal(rows[i].textContent);
			var creators = authorString.replace(/Author:\s*/, '').replace(/\[.+?\]/g, '').replace(/\(.+?\)/g, '');
			creators = creators.split(/,|and\s*/);
			for (let i = 0; i < creators.length; i++) {
				item.creators.push(ZU.cleanAuthor(creators[i], 'programmer'));
			}
		}
	}

	item.versionNumber = ZU.xpathText(doc, '//table/tbody/tr/td[contains(text(), "Version")]/following-sibling::td');
	item.rights = ZU.xpathText(doc, '//table/tbody/tr/td[contains(text(), "License")]/following-sibling::td');
	item.url = ZU.xpathText(doc, '//table/tbody/tr/td[contains(text(), "Package Short Url")]/following-sibling::td') || url;
	var year = ZU.xpathText(doc, '//*[@id="SiteGlobalFooter"]/div/p[contains(text(), "Copyright")]');
	if (year) {
		item.date = year.match(/\d+/g)[1];
	}
	
	var tags = ZU.xpath(doc, '//td[contains(text(), "biocViews")]/following-sibling::td/a');
	for (let i = 0; i < tags.length; i++) {
		item.tags.push(tags[i].textContent);
	}

	item.complete();
}