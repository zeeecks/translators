function detectWeb(doc, url) {
	if (url.match(/search_results/)) {
		return "multiple";
	} else if (url.match(/\/article\//)) {
		return "journalArticle";
	}
}

function doWeb(doc, url) {
	var host = doc.location.host;
	var site = host.match(/oxford(.*)online/)[1];
	var ids = new Array();
	if (detectWeb(doc, url) == "multiple") {
		var items = new Object();
		var links = doc.evaluate('//ul[@class="search_result_list"]/li/p/a', doc, null, XPathResult.ANY_TYPE, null);
		var link;
		while (link = links.iterateNext()) {
			items[link.href] = link.textContent;
		}
		Zotero.selectItems(items, function (items) {
			if (!items) {
				return true;
			}
			for (var i in items) {
				ids.push(i.match(/(article)\/([^?]+)/)[2]);
			}
			scrape(ids, host);
		});
	} else {
		ids = [url.match(/(article)\/([^?]+)/)[2]];
		scrape(ids, host);
	}	
}	

function scrape(ids, host){
	for (var i=0; i<ids.length; i++) {
		var id = ids[i];
		var get = 'http://' + host + '/subscriber/article_export_citation/' + id;
		Zotero.Utilities.HTTP.doGet(get, function(text) {
			var translator = Zotero.loadTranslator("import");
			translator.setTranslator("32d59d2d-b65a-4da4-b0a3-bdd3cfb979e7");
			translator.setString(text);
			translator.setHandler("itemDone", function(obj, item) {
				for (var j=0; j<item.creators.length; j++) {
					if (!item.creators[j].firstName){
						names = item.creators[j].lastName.match(/(.*)\s([^\s]+)$/);
						item.creators[j] = {firstName:names[1], lastName:names[2], creatorType:"author"};
					} 
				}
				item.complete();
			});
			translator.translate();
		});
	}
}