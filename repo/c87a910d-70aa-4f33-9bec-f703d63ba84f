function detectWeb(doc, url) {
	if (url.includes('/artikel/')) {
		return "magazineArticle";
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function doWeb(doc, url) {
	switch (detectWeb(doc, url)) {
		case "multiple":
			Zotero.selectItems(getSearchResults(doc, false), function (items) {
				if (!items) {
					return true;
				}
				var articles = [];
				for (var i in items) {
					articles.push(i);
				}
				ZU.processDocuments(articles, scrape);
				return true;
			});
			break;
		case "magazineArticle":
			scrape(doc, url);
			break;
	}
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var links = doc.querySelectorAll('.media-heading a');
	for (let i = 0; i < links.length; i++) {
		let href = links[i].href;
		let title = ZU.trimInternal(links[i].textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function scrape(doc, url) {
	var translator = Zotero.loadTranslator('web');
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48'); // embedded metadata
	translator.setDocument(doc);

	translator.setHandler('itemDone', function (obj, item) { // correct bad metadata in here
		if (url.includes('/artikel/')) {
			item.itemType = "magazineArticle";
		}
		if (url.includes('gamestar.de')) {
			item.publicationTitle = "GameStar";
		}
		if (url.includes('gamepro.de')) {
			item.publicationTitle = "GamePro";
		}
		item.language = "de-DE";
		item.creators = []; // reset bad author metadata

		var authorMetadata = doc.querySelectorAll('p.info.m-b-2 b');
		if (authorMetadata != undefined) {
			for (let author of authorMetadata) {
				item.creators.push(ZU.cleanAuthor(author.innerText, "author"));
			}
		}

		authorMetadata = doc.querySelectorAll('a[class="btn btn-link btn-inline"]');
		if (authorMetadata != undefined) {
			for (let author of authorMetadata) {
				item.creators.push(ZU.cleanAuthor(author.text, "author"));
			}
		}

		item.complete();
	});

	translator.getTranslatorObject(function(trans) {
		trans.doWeb(doc, url);
	});
}