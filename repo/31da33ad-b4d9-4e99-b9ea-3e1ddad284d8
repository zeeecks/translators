function detectWeb(doc, url) {
	if (url.match(/\/Record\/\d+/)) {
		return "book";
	}

	if (url.includes('/cgi/pt')) {
		// viewer page; more handling might be needed here
		return "book";
	}

	if ((url.includes("/Search/") || url.includes("a=listis;"))
		&& getSearchResults(doc, true)) {
		return "multiple";
	}

	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('.record-container');
	for (let row of rows) {
		let href = attr(row, 'a[href*="/Record/"]', 'href');
		let id = (href.match(/\/([0-9]+)/) || [])[1];
		let title = ZU.trimInternal(row.textContent);
		if (!id || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[id] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) scrape(Object.keys(items));
		});
	}
	else {
		let id = extractID(url);
		if (!id) id = extractID(attr(doc, '.bibLinks a[href*="/Record/"]', 'href'));
		if (!id) throw new Error('Couldn\'t extract ID from URL: ' + url);
		scrape([id]);
	}
}

function extractID(url) {
	return (url.match(/\/Record\/([0-9]+)/) || [])[1];
}

function scrape(ids) {
	var risURL = "http://catalog.hathitrust.org/Search/SearchExport?handpicked="
		+ ids.join(',') + "&method=ris";
	ZU.doGet(risURL, function (text) {
		// M1 has only garbage like repeated page number info
		text = text.replace(/^M1 {2}- .+/m, "");
		var translator = Zotero.loadTranslator("import");
		translator.setTranslator("32d59d2d-b65a-4da4-b0a3-bdd3cfb979e7");
		translator.setString(text);
		translator.setHandler("itemDone", function (obj, item) {
			item.extra = "";

			if (item.place) {
				item.place = item.place.replace(/[[\]]/g, "");
			}

			if (item.publisher) {
				item.publisher = item.publisher.replace(/[[\]]/g, "");
			}

			if (item.numPages) {
				// "3 p.l., 192 p." -> 192
				let cleanedPages = item.numPages.match(/(\d+)\s*p\.($|[^a-z])/i);
				if (cleanedPages) {
					item.numPages = cleanedPages[1];
				}
			}

			if (item.tags.length) {
				item.tags = item.tags.join("/").split("/")
					.map(s => ZU.trimInternal(s).replace(/\.$/, ''));
			}

			for (let creator of item.creators) {
				if (creator.firstName) {
					creator.firstName = creator.firstName.replace(/(\w{2,})\./, '$1');
				}

				if (creator.lastName) {
					creator.lastName = creator.lastName.replace(/\.$/, '');
				}
			}

			if (item.url.startsWith("//")) {
				item.url = "https:" + item.url;
			}

			// there's no reason to have a snapshot of the record page, but
			// HathiTrust metadata is pretty bare and it's likely that users
			// will want to come back
			item.attachments.push({
				title: 'Record Page',
				url: item.url,
				mimeType: 'text/html',
				snapshot: false
			});

			item.complete();
		});
		translator.translate();
	});
}