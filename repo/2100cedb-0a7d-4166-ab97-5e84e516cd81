function detectWeb(doc, _url) {
	if (doc.querySelector('meta[name="citation_title"]')) {
		if (attr(doc, 'meta[name="DC.type"]', 'content') == 'chapter') {
			return "bookSection";
		}
		else {
			return "book";
		}
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('.artifact-description > a');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, url) {
	var translator = Zotero.loadTranslator('web');
	// Embedded Metadata
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
	translator.setDocument(doc);
	
	translator.setHandler('itemDone', function (obj, item) {
		item.title = item.title.replace(' : ', ': ');
		
		delete item.journalAbbreviation;
		
		if (item.attachments.some(at => at.title == 'Full Text PDF')) {
			item.attachments = item.attachments.filter(at => at.title != 'Snapshot');
		}
		
		for (let creator of item.creators) {
			if (creator.firstName) {
				creator.firstName = creator.firstName.replace(/\s*\[.*$/, '');
			}
		}
		
		if (item.itemType == 'bookSection') {
			let search = Zotero.loadTranslator('search');
			search.setSearch({ DOI: item.DOI });
			
			search.setHandler('translators', function (_, translators) {
				search.setTranslator(translators);
				search.translate();
			});
			
			search.setHandler('itemDone', function (_, doiItem) {
				item.title = doiItem.title;
				item.bookTitle = doiItem.bookTitle;
				item.creators = doiItem.creators;
				item.ISBN = doiItem.ISBN;
				item.date = doiItem.date;
				item.complete();
			});
			
			search.getTranslators();
		}
		else {
			item.complete();
		}
	});

	translator.getTranslatorObject(function (trans) {
		if (attr(doc, 'meta[name="DC.type"]', 'content') == 'chapter') {
			trans.itemType = 'bookSection';
		}
		
		trans.doWeb(doc, url);
	});
}