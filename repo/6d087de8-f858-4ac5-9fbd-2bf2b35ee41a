function detectWeb(doc, url) {
	if (doc.querySelector('meta[name="citation_title"]')) {
		if (url.includes('/journals/')) {
			return 'journalArticle';
		}
		else if (url.includes('referenceworks.brillonline.com/entries/')) {
			return 'encyclopediaArticle';
		}
		else {
			return 'book';
		}
	}
	else if (url.includes('bibliographies.brillonline.com/entries/')
		&& doc.querySelector('#export-form')) {
		return 'journalArticle';
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('#searchContent .text-headline a, .type-article .text-headline a, .result-item .book-title a');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, url) {
	if (url.includes('bibliographies.brillonline.com/entries/')) {
		scrapeBibliography(doc, url);
		return;
	}
	
	if (doc.querySelector('body > meta')) {
		// Brill's HTML is structured incorrectly, and it causes some parsers
		// to interpret the <meta> tags as being in the body, which breaks EM.
		// We'll fix it here.
		for (let meta of doc.querySelectorAll('body > meta')) {
			doc.head.appendChild(meta);
		}
	}
	
	var translator = Zotero.loadTranslator('web');
	// Embedded Metadata
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
	translator.setDocument(doc);
	
	translator.setHandler('itemDone', function (obj, item) {
		if (item.date) {
			item.date = ZU.strToISO(item.date);
		}
		
		if (item.itemType == 'journalArticle' && item.section) {
			delete item.section;
		}
		
		if (item.itemType == 'book' && item.publicationTitle) {
			delete item.publicationTitle;
		}
		
		if (item.abstractNote && item.abstractNote.endsWith('by Brill.')) {
			delete item.abstractNote;
		}
		
		if (!item.creators.length) {
			// editors often don't make it into the EM
			for (let editor of doc.querySelectorAll('.content-contributor-editor a')) {
				item.creators.push(ZU.cleanAuthor(editor.textContent, 'editor'));
			}
		}
		
		if (item.attachments.length > 1) {
			// only remove snapshot if we get a PDF
			item.attachments = item.attachments.filter(at => at.title != 'Snapshot');
		}
		
		item.complete();
	});

	translator.getTranslatorObject(function (trans) {
		if (url.includes('referenceworks.brillonline.com/entries/')) {
			trans.itemType = 'encyclopediaArticle';
		}
		
		trans.doWeb(doc, url);
	});
}

function scrapeBibliography(doc, url) {
	let params = new URLSearchParams({
		entryId: attr(doc, 'input[name="entryId"]', 'value'),
		dest: attr(doc, 'input[name="dest"]', 'value')
	}).toString();
	
	ZU.doPost('/export/exportRis', params, function (ris) {
		var translator = Zotero.loadTranslator("import");
		translator.setTranslator("32d59d2d-b65a-4da4-b0a3-bdd3cfb979e7"); // RIS
		translator.setString(ris);
		translator.setHandler("itemDone", function (obj, item) {
			if (item.journalAbbreviation == item.publicationTitle) {
				delete item.journalAbbreviation;
			}
			
			if (item.url) {
				item.url = item.url.replace(':443', '');
			}
			
			item.complete();
		});
		translator.translate();
	});
}