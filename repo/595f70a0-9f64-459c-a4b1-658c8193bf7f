function detectWeb(doc, url) {
	if (url.includes('/video/')) {
		return "film";
	}
	return false;
}

function doWeb(doc, url) {
	scrape(doc, url);
}

function scrape(doc, url) {
	let item = new Zotero.Item('film');
	
	item.title = ZU.trimInternal(text(doc, 'h1.title').trim().replace(/\s*\n/, ':'));
	item.abstractNote = text(doc, '#video-panel-details p');
	item.distributor = text(doc, '.author a');
	item.url = attr(doc, 'link[rel="canonical"]', 'href') || url;
	
	for (let elem = doc.querySelector('.features > *'); elem; elem = elem.nextElementSibling) {
		let key = elem.textContent.trim();
		let value = (elem = elem.nextElementSibling).textContent.trim();
		
		switch (key) {
			case 'Running Time':
				item.runningTime = value;
				break;
			case 'Year':
				item.date = value;
				break;
			case 'Filmmakers':
				for (let person of elem.querySelectorAll('a')) {
					item.creators.push(ZU.cleanAuthor(person.textContent, 'director'));
				}
				break;
			case 'Features':
				for (let person of elem.querySelectorAll('a')) {
					item.creators.push(ZU.cleanAuthor(person.textContent, 'contributor'));
				}
				break;
			case 'Languages':
				item.language = value;
				break;
			case 'Subjects':
				for (let subj of elem.querySelectorAll('.item')) {
					let tag = subj.textContent.replace(/\s*>\s*/g, '--').trim();
					if (tag != 'Staff Picks') {
						item.tags.push({ tag });
					}
				}
				break;
		}
	}
	
	item.complete();
}