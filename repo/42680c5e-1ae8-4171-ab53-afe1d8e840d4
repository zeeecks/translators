function detectWeb(doc, url) {
	if ((url.includes('/journals/') || url.includes('/authors/') || url.includes('/search?')) && getSearchResults(doc, true)) {
		return "multiple";
	}
	else if (url.includes("/papers/")) {
		return "journalArticle";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;

	var rows = doc.querySelectorAll("a[href*='/papers/']");
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrapeEM(doc, url, postprocess) {
	var translator = Zotero.loadTranslator('web');
	// Embedded Metadata
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
	translator.setDocument(doc);
	
	translator.setHandler('itemDone', function (obj, item) {
		item.abstractNote = item.abstractNote.replace(/^Abstract/, '')
			.split(' | ')[0];
		item.date = ZU.strToISO(item.date);
		item.attachments = [];
		postprocess(item);
	});

	translator.getTranslatorObject(function (trans) {
		trans.itemType = "journalArticle";
		trans.doWeb(doc, url);
	});
}

function scrape(doc, url) {
	scrapeEM(doc, url, function (item) {
		item.attachments.push({
			title: "Full Text PDF",
			url: attr(doc, 'a[href*=".pdf"][target="_blank"]', 'href'),
			mimeType: 'application/pdf'
		});
		
		var m = url.match(/\/papers\/([^/#?]+)/);
		if (m) {
			var bibUrl = "/api/citations/export?pids=" + m[1] + "&format=BIBTEX";
			ZU.doGet(bibUrl, function (text, xhr) {
				if (xhr.status != 200) {
					Z.debug("Couldn't fetch BibTeX");
					// it's fine, we'll return what EM gave us
					item.complete();
					return;
				}
				
				var translator = Zotero.loadTranslator("import");
				// BibTeX
				translator.setTranslator("9cb70025-a888-4a29-a210-93ec52da40d4");
				translator.setString(text);
				translator.setHandler("itemDone", function (obj, bibItem) {
					if (bibItem.publicationTitle) {
						// BibTeX publication title is better
						delete item.publicationTitle;
					}
					
					if (bibItem.url) {
						// EM URL is just the page URL
						delete item.url;
					}
					
					Object.assign(bibItem, item);
					bibItem.complete();
				});
				translator.translate();
			}, null, null, null, false);
		}
	});
}