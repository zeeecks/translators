/*
	Translator
   Copyright (C) 2014 Sebastian Karcher

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU Affero General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU Affero General Public License for more details.

   You should have received a copy of the GNU Affero General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

function detectWeb(doc,url) {

	var xpath='//meta[@name="citation_journal_title"]';
	if (ZU.xpath(doc, xpath).length > 0) {
		return "journalArticle";
	}
			
	multxpath = '//div[@class="article-item"]/span[@class="title"]|//div[@class="result"]/h3'
	
	if (ZU.xpath(doc, multxpath).length>0){
		return "multiple";
	}
	return false;
}


function doWeb(doc,url)
{
	if (detectWeb(doc, url) == "multiple") {
		var hits = {};
		var urls = [];
		resultxpath = '//div[@class="article-item"]/span[@class="title"]/a|//div[@class="result"]/h3/a'
		var results = ZU.xpath(doc, resultxpath);
		for (var i in results) {
			hits[results[i].href] = results[i].textContent;
		}
		Z.selectItems(hits, function(items) {
			if (items == null) return true;
			for (var j in items) {
				urls.push(j);
			}
			ZU.processDocuments(urls, doWeb);
		});
	} else {
		var abstract = ZU.xpathText(doc, '//div[@class="abstract-text"]');
		var DOI = ZU.xpathText(doc, '//div[@id="info"]/p[strong[contains(text(), "Digital Object")]]/text()');
		var journalAbbr = ZU.xpathText(doc, '//ul[@class="citation"]/li[1]/a')
		var translator = Zotero.loadTranslator('web');
		//use Embedded Metadata
		translator.setTranslator("951c027d-74ac-47d4-a107-9c3069ab7b48");
		translator.setDocument(doc);
		translator.setHandler('itemDone', function(obj, item) {
			if (abstract) item.abstractNote = abstract.replace(/\s\s+/g, " ").replace(/\n/g, " ");
			if (DOI) item.DOI = DOI.replace(/doi:\s*/, "");
			item.journalAbbreviation = journalAbbr;
			item.extra = '';
			var mrnumber = ZU.xpathText(doc, '//div[@id="info"]/p[strong[contains(text(), "Mathematical Reviews number")]]/a');
			if (mrnumber) {
				item.extra = 'MR: ' + ZU.trimInternal(mrnumber)
			}
			var zbl = ZU.xpathText(doc, '//div[@id="info"]/p[strong[contains(text(), "Zentralblatt MATH")]]/a');
			if (zbl) {
				if (item.extra) item.extra += '\n';
				item.extra += 'Zbl: ' + ZU.trimInternal(zbl);
			}
			item.libraryCatalog = "Project Euclid"
			item.complete();
		});
		translator.translate();
	}
}