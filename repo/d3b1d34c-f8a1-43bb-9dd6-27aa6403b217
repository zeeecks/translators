function detectWeb(doc, url) {
	if (url.search(/\/watch\?(?:.*)\bv=[0-9a-zA-Z_-]+/) != -1) {
		return "videoRecording";
	}
	// Search results
	/* Testurls:
	http://www.youtube.com/user/Zoteron
	http://www.youtube.com/playlist?list=PL793CABDF042A9514
	http://www.youtube.com/results?search_query=zotero&oq=zotero&aq=f&aqi=g4&aql=&gs_sm=3&gs_upl=60204l61268l0l61445l6l5l0l0l0l0l247l617l1.2.1l4l0
	*/
	/* currently not working 2020-11-11
	if ((url.includes("/results?") || url.includes("/playlist?") || url.includes("/user/"))
			&& getSearchResults(doc, true)) {
		return "multiple";
	} */
	return false;
}

function getSearchResults(doc, checkOnly) {
	var links = doc.querySelectorAll('a.ytd-video-renderer, a.ytd-playlist-video-renderer');
	var items = {},
		found = false;
	for (var i = 0, n = links.length; i < n; i++) {
		var title = ZU.trimInternal(links[i].textContent);
		var link = links[i].href;
		if (!title || !link) continue;

		if (checkOnly) return true;

		found = true;
		items[link] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) != 'multiple') {
		scrape(doc, url);
	}
	else {
		Zotero.selectItems(getSearchResults(doc), function (items) {
			if (!items) return;

			var ids = [];
			for (var i in items) {
				ids.push(i);
			}
			ZU.processDocuments(ids, scrape);
		});
	}
}

function scrape(doc, url) {
	var item = new Zotero.Item("videoRecording");

	/* YouTube won't update the meta tags for the user,
	 * if they open e.g. a suggested video in the same tab.
	 * Thus we scrape them from screen instead.
	 */

	item.title = text(doc, '#info-contents h1.title');
	// try to scrape only the canonical url, excluding additional query parameters
	item.url = url.replace(/^(.+\/watch\?v=[0-9a-zA-Z_-]+).*/, "$1");
	item.runningTime = text(doc, '#movie_player .ytp-time-duration');
	item.date = ZU.strToISO(text(doc, '#info-strings yt-formatted-string'));

	var author = text(doc, '#meta-contents #text-container .ytd-channel-name')
		|| text(doc, '#text-container .ytd-channel-name');
	if (author) {
		item.creators.push({
			lastName: author,
			creatorType: "author",
			fieldMode: 1
		});
	}
	var description = text(doc, '#description .content') || text(doc, '#description');
	if (description) {
		item.abstractNote = description;
	}

	item.complete();
}