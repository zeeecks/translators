function detectWeb(doc, url) {
	if (url.includes('/literature')) {
		if (doc.querySelector('meta[name="citation_title"]')) {
			return "journalArticle";
		}
		else if (getSearchResults(doc, true)) {
			return "multiple";
		}
		else {
			Z.monitorDOMChanges(doc.querySelector('#root'));
		}
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('a.result-item-title[href*="/literature"]');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, url) {
	var bibUrl = url.replace('/literature/', '/api/literature/');
	ZU.doGet(bibUrl, function (ris) {
		let translator = Zotero.loadTranslator("import");
		translator.setTranslator("9cb70025-a888-4a29-a210-93ec52da40d4");
		translator.setString(ris);
		translator.setHandler("itemDone", function (obj, item) {
			for (let tag of doc.querySelectorAll('.ant-tag')) {
				item.tags.push({ tag: tag.textContent.trim() });
			}
			
			for (let action of doc.querySelectorAll('.__ListItemAction__ a')) {
				if (/\bpdf\b/i.test(action.textContent)) {
					item.attachments.push({
						title: 'Full Text PDF',
						mimeType: 'application/pdf',
						url: action.href
					});
				}
			}
			
			item.complete();
		});
		translator.translate();
	}, null, null, { Accept: 'application/x-bibtex' });
}