function detectWeb(doc, url) {
	let generator = attr(doc, 'meta[name="generator"]', 'content')
		|| text(doc, '#developedBy');
	if (!generator && doc.body.id.includes('openJournalSystems')) {
		generator = 'Open Journal Systems';
	}
	
	if (generator.startsWith('Open ')
		&& (url.includes('/search/search')
			|| doc.querySelector('.obj_issue_toc .cmp_article_list')
			|| doc.querySelector('#content > .tocArticle'))) {
		if (getSearchResults(doc, true)) {
			return "multiple";
		}
		else {
			return false;
		}
	}
	if (generator.startsWith('Open Journal Systems')) {
		return 'journalArticle';
	}
	if (generator.startsWith('Open Monograph Press')) {
		return 'book';
	}
	if (generator.startsWith('Open Preprint Systems')) {
		return 'report';
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('.title a[href*="/view/"], .title a[href*="/catalog/"], \
		.tocTitle a[href*="/view/"], .tocTitle a[href*="/catalog/"]');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		// In OJS 3, up to at least version 3.1.1-2, the PDF view does not
		// include metadata, so we must get it from the article landing page.
		var urlParts = url.match(/(.+\/[^/]+\/view\/)([^/]+)\/[^/]+/);
		if (urlParts) { // PDF view
			ZU.processDocuments(urlParts[1] + urlParts[2], scrape);
		}
		else { // Article view
			scrape(doc, url);
		}
	}
}

function scrape(doc, url) {
	// use Embeded Metadata
	var trans = Zotero.loadTranslator('web');
	trans.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
	trans.setDocument(doc);

	trans.setHandler('itemDone', function (obj, item) {
		if (item.itemType == 'report') {
			// preprint
			item.extra = (item.extra || '') + `\ntype: article\n`;
		}
		
		if (!item.title) {
			item.title = text(doc, '#articleTitle');
		}
		
		if (item.creators.length == 0) {
			var authorString = doc.getElementById("authorString");
			if (authorString) {
				var authorsList = authorString.textContent.split(',');
				for (let i = 0; i < authorsList.length; i++) {
					item.creators.push(ZU.cleanAuthor(authorsList[i], "author"));
				}
			}
		}
		
		// OJS journal abbreviations are rarely correct. sometimes they're
		// generated from the journal's URL slug, other times they're just the
		// number "1", or the full name of the journal, or an abbreviation that
		// isn't correct according to ISO 4 or the journal's editors
		// (see MeteoHistory test).
		delete item.journalAbbreviation;

		var doiNode = doc.getElementById('pub-id::doi');
		if (!doiNode) doiNode = doc.querySelector('.pubid .value');
		if (!item.DOI && doiNode) {
			item.DOI = doiNode.textContent;
		}
		
		if (item.itemType == 'journalArticle') {
			// abstract is supplied in DC:description, so it ends up in extra
			// abstractNote is pulled from description, which is same as title
			item.abstractNote = item.extra;
			item.extra = undefined;
		}

		// if we still don't have abstract, we can try scraping from page
		if (!item.abstractNote) {
			item.abstractNote = ZU.xpathText(doc, '//div[@id="articleAbstract"]/div[1]')
				|| ZU.xpathText(doc, '//div[contains(@class, "main_entry")]/div[contains(@class, "abstract")]');
		}
		
		if (item.abstractNote) {
			item.abstractNote = item.abstractNote.trim().replace(/^Abstract:?\s*/, '');
		}

		if (!item.abstractNote) {
			item.abstractNote = attr(doc, 'meta[name="DC.Description"]', 'content');
		}

		if (!item.ISBN) {
			item.ISBN = ZU.cleanISBN(text(doc, '.identification_code .value'));
		}
		
		if (item.date) {
			item.date = ZU.strToISO(item.date);
		}
		else {
			item.date = ZU.strToISO(
				attr(doc, 'meta[name="DC.Date.modified"]', 'content')
					|| attr(doc, 'meta[name="DC.Date.created"]', 'content')
			);
		}
		
		if (item.volume == '0') {
			item.volume = '';
		}
		
		if (item.institution) {
			item.institution = '';
		}
		
		var pdfAttachment = false;
		
		// some journals link to a PDF view page in the header, not the PDF itself
		for (let i = 0; i < item.attachments.length; i++) {
			if (item.attachments[i].mimeType == 'application/pdf') {
				pdfAttachment = true;
				item.attachments[i].url = item.attachments[i].url.replace('/view/', '/download/');
			}
			else if (item.attachments[i].title == 'Snapshot') {
				item.attachments.splice(i--, 1); // delete it
			}
		}
		
		var pdfUrl = doc.querySelector("a.pdf");
		// add linked PDF if there isn't one listed in the header
		if (!pdfAttachment && pdfUrl) {
			pdfAttachment = true;
			item.attachments.push({
				title: "Full Text PDF",
				mimeType: "application/pdf",
				url: pdfUrl.href.replace('/view/', '/download/')
			});
		}
		
		// add linked PDF if there isn't one listed in the header
		if (!pdfAttachment) {
			for (let link of doc.querySelectorAll("a.obj_galley_link")) {
				if (link.textContent.includes('PDF')) {
					pdfAttachment = true;
					item.attachments.push({
						title: "Full Text PDF",
						mimeType: "application/pdf",
						url: link.href.replace('/view/', '/download/')
					});
					break;
				}
			}
		}
		
		item.complete();
	});

	trans.getTranslatorObject(function (trans) {
		trans.itemType = detectWeb(doc, url);
		trans.doWeb(doc, url);
	});
}