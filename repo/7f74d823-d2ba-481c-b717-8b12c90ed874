function detectWeb(_doc, _url) {
	return 'newspaperArticle';
}

function doWeb(doc, url) {
	scrape(doc, url);
}
function getMetaTag(doc, attr, value, contentattr) {
	const tag = Array.from(doc.getElementsByTagName("meta")).filter(m => m.attributes[attr] && m.attributes[attr].value == value)[0];
	if (tag && tag.attributes[contentattr]) {
		return tag.attributes[contentattr].value;
	}
	return null;
}
function scrape(doc, _url) {
	const translator = Zotero.loadTranslator('web');
	// Embedded Metadata
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
	translator.setDocument(doc);
	
	translator.setHandler('itemDone', function (obj, item) {
		// Add data for fields that are not covered by Embedded Metadata
		// Author name is stored as firstname lastname
		const authorName = getMetaTag(doc, "property", "cXenseParse:author", "content");
		if (authorName) {
			item.creators = [ZU.cleanAuthor(authorName, "author", false)];
		}
		// Date is stored as a timestamp like 2020-09-07T17:37:00+07:00, just extract the YYYY-MM-DD at start
		const date = getMetaTag(doc, "name", "cXenseParse:recs:publishtime", "content");
		if (date) {
			item.date = date.substr(0, 10);
		}
		
		item.publicationTitle = "Bangkok Post";
		item.itemType = "newspaperArticle";
		
		item.complete();
	});
	translator.translate();
}