// we should also support open-research-europe.ec.europa.eu, but it uses a
// version of the platform without any EM metadata and an obfuscated citation
// export mechanism...


function detectWeb(doc, url) {
	if (url.includes('/articles/')
		&& doc.querySelector('meta[name="citation_title"]')) {
		return "report";
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('.article-listing .article-link');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, url) {
	var translator = Zotero.loadTranslator('web');
	// Embedded Metadata
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
	translator.setDocument(doc);
	
	translator.setHandler('itemDone', function (obj, item) {
		item.itemType = 'report';
		item.extra = (item.extra || '') + '\nType: article'; // preprint
		
		delete item.pages;
		delete item.reportType;
		
		item.reportNumber = `${item.volume}:${item.issue}`;
		delete item.volume;
		delete item.issue;
		delete item.number;
		
		item.institution = item.publicationTitle;
		delete item.publisher;
		delete item.publicationTitle;
		
		if (item.date) {
			item.date = ZU.strToISO(item.date);
		}
		
		item.attachments = item.attachments.filter(at => at.title != 'Snapshot');
		
		item.complete();
	});

	translator.getTranslatorObject(function (trans) {
		trans.itemType = "report";
		trans.doWeb(doc, url);
	});
}