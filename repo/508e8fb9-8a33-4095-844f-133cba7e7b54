function detectWeb(doc, url) {
	if (url.includes('/article/')) {
		return "blogPost";
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}


function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('ul.search-results>li>h2>a');
	for (let i = 0; i < rows.length; i++) {
		let href = rows[i].href;
		let title = ZU.trimInternal(rows[i].textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}


function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (!items) {
				return;
			}
			var articles = [];
			for (var i in items) {
				articles.push(i);
			}
			ZU.processDocuments(articles, scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}


function scrape(doc, url) {
	var item = new Zotero.Item("blogPost");
	item.title = text("h1.article-title");
	item.abstractNote = text("div.article-teaser");
	item.publicationTitle = "VoxEU.org";
	item.url = url;
	item.date = text("span.date-display-single");
	if (item.date) {
		item.date = ZU.strToISO(item.date);
	}
	var creators = doc.querySelectorAll("div.author span.field-content");
	for (let creator of creators) {
		item.creators.push(ZU.cleanAuthor(creator.textContent, "author"));
	}
	item.attachments = [{
		document: doc,
		title: "Snapshot"
	}];
	item.complete();
}