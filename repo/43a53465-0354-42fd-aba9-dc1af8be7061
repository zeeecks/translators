function detectWeb(doc, url) {
	if (doc.querySelector('meta[name="citation_title"]')
		&& doc.querySelector('meta[property="dc:type"]')) {
		return attr(doc, 'meta[property="dc:type"]', 'content', 0);
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('.list-result a.font-bold');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, url) {
	var translator = Zotero.loadTranslator('web');
	// Embedded Metadata
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
	translator.setDocument(doc);
	
	translator.setHandler('itemDone', function (obj, item) {
		if (item.abstractNote.startsWith('ISIDORE is')) {
			delete item.abstractNote;
		}
		
		item.url = attr(
			doc,
			'a[title*="Access the document"], a[data-original-title*="Access the document"]',
			'href'
		);
		item.attachments = [];
		item.tags = [];
		delete item.websiteType;
		
		item.complete();
	});

	translator.getTranslatorObject(function (trans) {
		trans.addCustomFields({
			'DC.relation.ispartof': 'publicationTitle'
		});
		trans.doWeb(doc, url);
	});
}