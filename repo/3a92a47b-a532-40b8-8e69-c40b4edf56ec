function detectWeb(doc, url) {
	if (url.includes('/publications/') && doc.body.classList.contains('node--type-publication')) {
		if (doc.querySelector('.views-field-field-isbn')) {
			return "book";
		}
		else {
			return "report";
		}
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('td.views-field-title a');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, url) {
	let item = new Zotero.Item('report');
	
	item.title = text(doc, '#sipri-2016-page-title');
	item.abstractNote = text(doc, '.body p');
	item.date = ZU.strToISO(text(doc, '.views-field-field-year-of-publication'));
	item.language = 'en';
	item.url = attr(doc, 'link[rel="canonical"]', 'href') || url;
	
	for (let author of doc.querySelectorAll('.views-field-combinedauthors a')) {
		let name = author.innerText.replace(/^\s*Dr\.?\b/, '');
		item.creators.push(ZU.cleanAuthor(name, 'author'));
	}
	
	if (doc.querySelector('.views-field-field-isbn')) {
		item.itemType = 'book';
		item.ISBN = ZU.cleanISBN(text(doc, '.views-field-field-isbn .field-content'));
		item.numPages = text(doc, '.views-field-field-pages .field-content')
			.replace('pp.', '');
		item.publisher = text(doc, '.views-field-field-publisher-name .field-content');
		
		// this is VERY fragile, but oh well. it isn't crucial and there's no
		// better way besides fetching info from the ISBN (which is worse in terms
		// of speed and isn't guaranteed to be more accurate).
		for (let h3 of doc.querySelectorAll('h3')) {
			if (h3.textContent.includes('About the series editor')) {
				let p = h3.nextElementSibling;
				let seriesEditor = text(p, 'i').replace(/^\s*Dr\.?\b/, '');
				item.creators.push(ZU.cleanAuthor(seriesEditor, 'seriesEditor'));
				break;
			}
		}
	}
	else {
		item.institution = text(doc, '.views-field-field-publisher-name .field-content');
	}
	
	let pdfURL = attr(doc, '.field-pdf-full-publication a', 'href');
	if (pdfURL) {
		item.attachments.push({
			title: 'Full Text PDF',
			mimeType: 'application/pdf',
			url: pdfURL
		});
	}
	
	item.complete();
}