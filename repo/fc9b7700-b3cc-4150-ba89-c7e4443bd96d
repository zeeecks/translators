function detectWeb(doc, url) {
	if (url.includes('/content/')) {
		return "newspaperArticle";
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('a.js-teaser-heading-link');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(_doc, url) {
	ZU.processDocuments(url.replace('www.ft.com/', 'amp.ft.com/'), scrapeAmp);
}

function scrapeAmp(doc, url) {
	let item = new Zotero.Item('newspaperArticle');
	
	let meta = [...doc.querySelectorAll('script[type="application/ld+json"]')]
		.map(elem => JSON.parse(elem.textContent))
		.find(json => json['@type'] != 'WebSite');
	if (!meta) {
		throw new Error("No article metadata (probably hit paywall)");
	}
	
	item.title = meta.headline;
	item.date = ZU.strToISO(meta.datePublished);
	item.abstractNote = meta.description
		|| text('.article-standfirst');
	// something funky is going on with the JSON-LD authors, so we'll just
	// parse from the HTML
	item.creators = [...doc.querySelectorAll('a.article-author-byline__author')]
		.map(link => ZU.cleanAuthor(link.innerText, 'author', false));
	item.publicationTitle = 'Financial Times';
	item.section = text('h2.primary-brand a')
		|| text('h2.primary-theme a');
	item.url = meta.mainEntityofPage;
	item.libraryCatalog = '';
	item.attachments.push({
		title: "Snapshot",
		url: item.url,
		mimeType: 'text/html',
		snapshot: true
	});
	item.complete();
}