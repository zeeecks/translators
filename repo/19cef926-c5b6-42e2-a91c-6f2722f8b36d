function detectWeb(doc, url) {
	if (url.includes('/article-detail?')) return "journalArticle";
	else if (getSearchResults(doc, true)) return "multiple";
	else return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('.description a, .article-details > h3 > a');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), invokeEMTranslator);
		});
	}
	else {
		invokeEMTranslator(doc, url);
	}
}

function invokeEMTranslator(doc) {
	var translator = Zotero.loadTranslator("web");
	// Embedded Metadata
	translator.setTranslator("951c027d-74ac-47d4-a107-9c3069ab7b48");
	translator.setDocument(doc);
	translator.setHandler("itemDone", function (t, i) {
		postProcess(doc, i);
	});
	translator.translate();
}

// scraping abstractNote from HTML, that is not included in Embedded Metadata
function postProcess(doc, item) {
	let abstractEntry = ZU.xpathText(doc, '//p[@class="summary"]');
	if (!item.abstractNote && abstractEntry) item.abstractNote = abstractEntry;
	for (let i = 0; i < item.attachments.length; i++) {
		if (item.attachments[i].title == 'Snapshot') {
			item.attachments.splice(i, 1);
			break;
		}
	}
	item.complete();
}