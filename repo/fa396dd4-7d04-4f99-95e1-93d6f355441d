function detectWeb(doc, url) {
	if ((url.includes('/search') || url.includes('/showciting')) && getSearchResults(doc).length) {
		return "multiple";
	}
	//for running the tests with book example
	if (url == "http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.332.356&rank=1") return "book";
	if ((url.includes('/viewdoc/') && doc.getElementById('bibtex'))
		|| url.includes('/download?doi=')) {
		return "journalArticle";
	}
}

function getSearchResults(doc) {
	return ZU.xpath(doc, '//div[@class="result"]/h3/a');
}

function doWeb(doc, url) {
	var articles = [];
	if (detectWeb(doc, url) == "multiple") {
		var items = {};
		var titles = getSearchResults(doc);
		for (var i=0; i<titles.length; i++) {
			items[titles[i].href] = titles[i].textContent.trim();
		}
		Zotero.selectItems(items, function (items) {
			if (!items) {
				return true;
			}
			for (var i in items) {
				articles.push(i);
			}
			ZU.processDocuments(articles, scrape);
		});
	} else if (url.includes('/download?doi=')) {
		// PDF paper view
		// e.g. http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.415.9750&rep=rep1&type=pdf
		let doi = url.match(/\/download\?doi=([^&]*)/);
		let paperUrl = 'http://citeseerx.ist.psu.edu/viewdoc/summary?doi=' + doi[1];
		ZU.processDocuments(paperUrl, scrape);
	} else {
		scrape(doc, url);
	}
}

function scrape(doc, url) {
	//get abstract and pdf from article plage
	var abs = ZU.xpathText(doc, '//meta[@name="description"]/@content');
	var pdfurl = "http://citeseerx.ist.psu.edu" + ZU.xpathText(doc, '//div[@id="downloads"]//a[contains(@title, "document as PDF")]/@href');
	var bibtex = ZU.trimInternal(ZU.xpathText(doc, '//div[@id="bibtex"]/p').replace(/computingdiscrete/g, ""));
	var translator = Zotero.loadTranslator("import");
	translator.setTranslator("9cb70025-a888-4a29-a210-93ec52da40d4");
	//Z.debug(bibtex);
	translator.setString(bibtex);
	translator.setHandler("itemDone", function (obj, item) {
		if (abs) item.abstractNote = abs.replace(/.+?:/, "");
		if (item.title == item.title.toUpperCase()) {
			item.title = ZU.capitalizeTitle(item.title.toLowerCase(), true);
		}
		if (item.publicationTitle && (item.publicationTitle == item.publicationTitle.toUpperCase())) {
			item.publicationTitle = ZU.capitalizeTitle(item.publicationTitle.toLowerCase(), true);
		}
		item.attachments = [{
			document: doc,
			title: "Citeseer - Snapshot",
			mimeType: "text/html"
		}, {
			url: pdfurl,
			title: "Citeseer - Full Text PDF",
			mimeType: "application/pdf"
		}];
		item.complete();

	});
	translator.translate();
}