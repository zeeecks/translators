function detectWeb(doc, _url) {
	if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('.documentSummary');
	for (let row of rows) {
		let id = row.id;
		let title = ZU.trimInternal(text(row, 'h3'));
		if (!id || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[id] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) scrape(Object.keys(items), doc.location.hostname);
		});
	}
}

function scrape(ids, hostname) {
	let url = `/citation/export?ids=${ids.join(',')}&format=endnote&file_name=zotero`;
	ZU.doGet(url, function (ris) {
		let translator = Zotero.loadTranslator("import");
		// RIS
		translator.setTranslator("32d59d2d-b65a-4da4-b0a3-bdd3cfb979e7");
		translator.setString(ris);
		translator.setHandler("itemDone", function (obj, item) {
			item.creators = item.creators.filter(
				creator => !creator.lastName.includes('(Online service)')
			);
			
			if (item.date) {
				if (item.date.includes(';')) {
					item.date = item.date.split(';')[0];
				}
				item.date = ZU.strToISO(item.date);
			}
			
			item.libraryCatalog = `Summon 2 (${hostname})`;
			
			item.complete();
		});
		translator.translate();
	});
}