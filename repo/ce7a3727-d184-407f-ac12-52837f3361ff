function detectWeb(doc, url) {
	// we use another function name to avoid confusions with the
	// same function from the called EM translator (sigh)
	return detectWebHere(doc, url);
}


function detectWebHere(doc, url) {
	if (url.includes('/search') && getSearchResults(doc, true)) {
		return "multiple";
	}
	if (ZU.xpathText(doc, '//meta[@property="og:type" and @content="article"]/@content')) {
		if (url.includes('blog')) {
			return "blogPost";
		}
		else {
			return "newspaperArticle";
		}
	}
	return false;
}


function scrape(doc, url) {
	var type = detectWebHere(doc, url);
	var translator = Zotero.loadTranslator('web');
	// Embedded Metadata
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
	// translator.setDocument(doc);
	
	translator.setHandler('itemDone', function (obj, item) {
		item.itemType = type;
		if (item.language) {
			if (item.language === "en") {
				item.language = "en-US";
			}
		}
		else {
			item.language = ZU.xpathText(doc, '//meta[@itemprop="inLanguage"]/@content') || "en-US";
		}
		if (item.date) {
			item.date = ZU.strToISO(item.date);
		}
		else {
			item.date = attr(doc, 'time[datetime]', 'datetime')
				|| attr(doc, 'meta[itemprop="datePublished"]', 'content')
				|| attr(doc, 'meta[itemprop="dateModified"]', 'content');
		}
		if (item.itemType == "blogPost") {
			item.blogTitle = ZU.xpathText(doc, '//meta[@property="og:site_name"]/@content');
		}
		else {
			item.publicationTitle = "The New York Times";
			item.ISSN = "0362-4331";
		}
		// Multiple authors are (sometimes) just put into the same Metadata field
		var authors = attr(doc, 'meta[name="author"]', 'content') || attr(doc, 'meta[name="byl"]', 'content') || text(doc, '*[class^="Byline-bylineAuthor--"]');
		if (authors && item.creators.length <= 1) {
			authors = authors.replace(/^By /, '');
			if (authors == authors.toUpperCase()) { // convert to title case if all caps
				authors = ZU.capitalizeTitle(authors, true);
			}
			item.creators = [];
			var authorsList = authors.split(/,|\band\b/);
			for (let i = 0; i < authorsList.length; i++) {
				item.creators.push(ZU.cleanAuthor(authorsList[i], "author"));
			}
		}
		item.url = ZU.xpathText(doc, '//link[@rel="canonical"]/@href') || url;
		if (item.url && item.url.substr(0, 2) == "//") {
			item.url = "https:" + item.url;
		}
		item.libraryCatalog = "NYTimes.com";
		// Convert all caps title of NYT archive pages to title case
		if (item.title == item.title.toUpperCase()) {
			item.title = ZU.capitalizeTitle(item.title, true);
		}
		// Strip "(Published [YEAR])" from old articles
		item.title = item.title.replace(/\s+\(Published \d{4}\)$/, '');
		// Only force all caps to title case when all tags are all caps
		var allcaps = true;
		for (let i = 0; i < item.tags.length; i++) {
			if (item.tags[i] != item.tags[i].toUpperCase()) {
				allcaps = false;
				break;
			}
		}
		if (allcaps) {
			for (let i = 0; i < item.tags.length; i++) {
				item.tags[i] = ZU.capitalizeTitle(item.tags[i], true);
			}
		}

		/* TODO: Fix saving the PDF attachment which is currently broken
		
		// PDF attachments are in subURL with key & signature
		var pdfurl = ZU.xpathText(doc, '//div[@id="articleAccess"]//span[@class="downloadPDF"]/a[contains(@href, "/pdf")]/@href | //a[@class="button download-pdf-button"]/@href');
		if (pdfurl) {
			ZU.processDocuments(pdfurl,
				function(pdfDoc) {
					authenticatedPDFURL = pdfDoc.getElementById('archivePDF').src;
					if (authenticatedPDFURL) {
						item.attachments.push({
							title: "NYTimes Archive PDF",
							mimeType: 'application/pdf',
							url: authenticatedPDFURL
						});
					} else {
						Z.debug("Could not find authenticated PDF URL");
						item.complete();
					}
				},
				function() {
					Z.debug("PDF retrieved: "+authenticatedPDFURL);
					item.complete();
				}
			);
		} else {
		*/
		Z.debug("Not attempting PDF retrieval");
		item.complete();
		// }
	});
	
	translator.getTranslatorObject(function (trans) {
		trans.splitTags = false;
		trans.addCustomFields({
			dat: 'date',
		});
		trans.doWeb(doc, url);
	});
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('li[data-testid*="result"]');
	for (var i = 0; i < rows.length; i++) {
		var href = ZU.xpathText(rows[i], '(.//a)[1]/@href');
		var title = ZU.xpathText(rows[i], './/h4');
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}


function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (!items) {
				return;
			}
			var articles = [];
			for (var i in items) {
				articles.push(i);
			}
			ZU.processDocuments(articles, scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}