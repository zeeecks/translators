function detectWeb(doc, url) {
	if (url.indexOf('/browse/') != -1 || url.indexOf('/search/') != -1) {
		if (ZU.xpath(doc, '//div[@class="citation"]').length) {
			return 'multiple';
		}
	} else if (url.indexOf('/records/') != -1) {
		var type = ZU.xpathText(doc, '//meta[@name="itemType"]/@content');
		if (type && ZU.itemTypeExists(type)) {
			return type;
		}
	}
}

function scrape(doc, url) {
	var item = new Zotero.Item(detectWeb(doc, url));
	var meta = ZU.xpath(doc, '//meta[@name]');
	var place = new Array();
	var date = ['', '', ''];
	var months = ['jan', 'feb', 'mar', 'apr', 'may', 'jun',
				'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];
	for (var i=0, n=meta.length; i<n; i++) {
		switch (meta[i].name) {
			case 'author':
			case 'editor':
			case 'persenter':
			case 'artist':
				item.creators.push(
					ZU.cleanAuthor(meta[i].content, meta[i].name, true));
				break;
			case 'title':
			case 'publicationTitle':
			case 'bookTitle':
			case 'volume':
			case 'pages':
			case 'edition':
			case 'publisher':
			case 'conferenceName':
			case 'websiteTitle':
			case 'rights':
				item[meta[i].name] = ZU.trimInternal(meta[i].content);
				break;
			case 'dateY':
				date[0] = meta[i].content;
				break;
			case 'dateM':
				date[1] = months.indexOf(meta[i].content.trim()
											.toLowerCase().substr(0,3)) + 1 ||
								meta[i].content.replace(/\D+/g, '');
				break;
			//case 'dateDE':	end date for presentation
			case 'dateD':
				date[2] = meta[i].content.replace(/\D+/g,'');
			case 'issue':
				item.issue = meta[i].content.replace(/\D+/g, '');
				break
			case 'place':
			case 'placeCity':
				place[0] = meta[i].content;
				break;
			case 'placeCountry':
				place[1] = meta[i].content;
				break;
			case 'description':
				item.abstractNote = ZU.trimInternal(meta[i].content);
				break;
			case 'keywords':
				item.tags = meta[i].content.split(/,\s+/);
				break;
			case 'url':
				item.url = meta[i].content;
				break;
			case 'medium':
				item.artworkMedium = meta[i].content;
				break;
		}
	}

	if (!item.title) item.title = ZU.xpathText(doc, '//title')
									.split(/\s*\|/)[0].trim();

	if (place[0]) item.place = place.join(', ');
	else item.place = place[1];

	item.date = date.join('-').replace(/(^-.*|--.*|-$)/g,'');
	item.libraryCatalog = 'IPinCH';
	item.callNumber = url.match(/records\/(\d+)/i)[1];
	item.complete();
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == 'multiple') {
		var links = ZU.xpath(doc, '//div[@class="citation"]');
		Zotero.selectItems(ZU.getItemArray(doc, links), function(selectedItems) {
			if (!selectedItems) return true;

			var urls = new Array();
			for (var i in selectedItems) {
				urls.push(i);
			}
			ZU.processDocuments(urls,
						function(doc) { scrape(doc, doc.location.href) });
		});
	} else {
		scrape(doc, url);
	}
}