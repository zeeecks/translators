// attr()/text() v2
// eslint-disable-next-line
function attr(docOrElem,selector,attr,index){var elem=index?docOrElem.querySelectorAll(selector).item(index):docOrElem.querySelector(selector);return elem?elem.getAttribute(attr):null;}function text(docOrElem,selector,index){var elem=index?docOrElem.querySelectorAll(selector).item(index):docOrElem.querySelector(selector);return elem?elem.textContent:null;}

function detectWeb(doc, url) {
	if (isContentUrl(url)) {
		let subtypeMatch = getItemSubtype(doc);
		if (!subtypeMatch) {
			return 'journalArticle';
		}
		let subtype = subtypeMatch[1].toLowerCase();

		if (subtype == 'conference') {
			return 'conferencePaper';
		}
		else if (subtype == 'journal' || subtype == 'periodical' || subtype == 'magazine' || subtype == 'newsletter') {
			return 'journalArticle';
		}
		else if (subtype == 'report' || subtype == 'rfc') {
			return 'report';
		}
		else if (subtype == 'thesis') {
			return 'thesis';
		}
		else if (subtype == 'software') {
			return 'computerProgram';
		}
		else if (subtype == 'dataset') {
			return 'document';
		}
		else if (subtype == 'book') {
			let bookTypeRegex = /page:string:([\w ]+)/;
			let extractedContext = attr(doc, 'meta[name=pbContext]', 'content');
			let bookType = extractedContext.match(bookTypeRegex);
			if (bookType && bookType[1].toLowerCase() == 'book page') {
				return 'book';
			}
			else {
				return 'bookSection';
			}
		}
		return 'journalArticle';
	}
	else if (getSearchResults(doc, false)) {
		return 'multiple';
	}
	return false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == 'multiple') {
		Zotero.selectItems(getSearchResults(doc), function (selected) {
			if (selected) {
				ZU.processDocuments(Object.keys(selected), scrape);
			}
		});
	}
	else {
		scrape(doc);
	}
}

function getItemSubtype(doc) {
	let extractedContext = attr(doc, 'meta[name=pbContext]', 'content');
	let subtypeRegex = /csubtype:string:(\w+)/;
	return extractedContext.match(subtypeRegex);
}

function isContentUrl(url) {
	return (url.includes('/doi/') || url.includes('/do/')) && !url.includes('/doi/proceedings');
}

function getSearchResults(doc, checkOnly) {
	let items = {};
	let found = false;
	let results = doc.querySelectorAll('h5.issue-item__title a');
	
	for (let i = 0; i < results.length; i++) {
		let url = results[i].href;
		let title = ZU.trimInternal(results[i].textContent);
		if (!title || !url) {
			continue;
		}
		
		if (!isContentUrl(url)) {
			continue;
		}
		
		if (checkOnly) {
			return true;
		}
		found = true;
		items[url] = title;
	}
	
	return found ? items : false;
}

function scrape(doc) {
	let doi = attr(doc, 'input[name=doiVal]', 'value');
	let lookupEndpoint = 'https://dl.acm.org/action/exportCiteProcCitation';
	let postBody = 'targetFile=custom-bibtex&format=bibTex&dois=' + encodeURIComponent(doi);
	
	ZU.doPost(lookupEndpoint, postBody, function (returnedText) {
		let json = JSON.parse(returnedText);
		let cslItem = json.items[0][doi];
		cslItem.type = cslItem.type.toLowerCase().replace('_', '-');
		
		// Some pages use ARTICLE rather than ARTICLE_JOURNAL
		// https://github.com/zotero/translators/issues/2162
		if (cslItem.type == 'article') {
			cslItem.type = 'article-journal';
		}
		else if (cslItem.type == 'thesis') {
			// The advisor is indicated as an editor in CSL which
			// ZU.itemFromCSLJSON incorrectly extracts as an author.
			delete cslItem.editor;
			// The (co-)chair(s) or supervisor(s) are included in CSL as additional authors.
			cslItem.author.splice(1);
		}
		
		let item = new Zotero.Item();
		ZU.itemFromCSLJSON(item, cslItem);
		
		let abstractElements = doc.querySelectorAll('div.article__abstract p, div.abstractSection p');
		let abstract = Array.from(abstractElements).map(x => x.textContent).join('\n\n');
		if (abstract.length && abstract.toLowerCase() != 'no abstract available.') {
			item.abstractNote = ZU.trimInternal(abstract);
		}
		
		let pdfElement = doc.querySelector('a[title=PDF]');
		if (pdfElement) {
			item.attachments.push({
				url: pdfElement.href,
				title: 'Full Text PDF',
				mimeType: 'application/pdf'
			});
		}
		
		if (item.itemType == 'journalArticle') {
			// Publication name in the CSL is shortened; scrape from page to get full title.
			let expandedTitle = text(doc, 'span.epub-section__title');
			if (expandedTitle) {
				item.journalAbbreviation = item.publicationTitle;
				item.publicationTitle = expandedTitle;
			}
			// Article number 46 --> pages = 46:1–46:22
			if (cslItem.number) {
				let number = cslItem.number.replace("Article", "").trim();
				if (item.pages) {
					item.pages = item.pages.split("–").map(x => number + ":" + x).join("–");
				}
				else {
					item.pages = number;
				}
			}
		}
		
		if (!item.creators.length) {
			// There are cases where authors are not included in the CSL
			// (for example, a chapter of a book) so we must scrape them.
			// e.g. https://dl.acm.org/doi/abs/10.5555/3336323.C5474411
			let authorElements = doc.querySelectorAll('div.citation span.loa__author-name');
			authorElements.forEach(function (element) {
				item.creators.push(ZU.cleanAuthor(element.textContent, 'author'));
			});
		}
		
		if (!item.ISBN && cslItem.ISBN) {
			let isbnLength = cslItem.ISBN.replace('-', '').length;
			let isbnText = 'ISBN-' + isbnLength + ': ' + cslItem.ISBN;
			item.extra = item.extra ? item.extra + '\n' + isbnText : isbnText;
		}
		
		let numPages = text(doc, 'div.pages-info span');
		if (numPages && !item.numPages) {
			item.numPages = numPages;
		}
		
		let tagElements = doc.querySelectorAll('div.tags-widget a');
		tagElements.forEach(function (tag) {
			item.tags.push(tag.textContent);
		});
		
		if (getItemSubtype(doc) == 'dataset') {
			item.extra = item.extra ? item.extra + '\nitemType: data' : 'itemType: data';
		}
		
		delete item.callNumber;
		
		item.complete();
	});
}