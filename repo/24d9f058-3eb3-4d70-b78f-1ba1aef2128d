/*This translator imports OpenURL ContextObjects encapsulated in XML
 * documents, as described at:
 *  http://alcme.oclc.org/openurl/servlet/OAIHandler?verb=GetRecord&metadataPrefix=oai_dc&identifier=info:ofi/fmt:xml:xsd:ctx
 * The schema for such XML documents is at:
 *  http://www.openurl.info/registry/docs/xsd/info:ofi/fmt:xml:xsd:ctx
 *
 * This format is used in several places online, including Brown University's FreeCite
 * Citation parser (http://freecite.library.brown.edu/welcome) and Oslo University's
 * X-Port (http://www.ub.uio.no/portal/gs.htm or http://x-port.uio.no/).
 *
 * The approach we will take is to convert this into COinS, so that we can
 * piggy-back off of the perhaps more robust support in the core Zotero code.
 */


function detectImport() {
	// read at most 100 lines and checks for ctx-namespace
	var line, i=0;
	while ((line = Zotero.read()) !== false && i<100) {
		if ( line.includes("info:ofi/fmt:xml:xsd:ctx") ) {
			return true;
		}
		i++;
	}
	return false;
}


function doImport() {

	var spans = contextObjectXMLToCOinS( Z.getXML() );
	
	for (var i = 0 ; i < spans.length ; i++) {
		Zotero.debug("Processing span: "+spans[i]);
		var item = new Zotero.Item;
		var success = Zotero.Utilities.parseContextObject(spans[i], item);
		if (success) {
			Zotero.debug("Found " + item.itemType);
			// Set publicationTitle to the short title if only the latter is specified
			if (item.journalAbbreviation && !item.publicationTitle) {
				item.publicationTitle = item.journalAbbreviation;
			}
			item.complete();
		} else {
			Zotero.debug("parseContextObject was not successful");
		}
	}
}

/* Takes the string of the ContextObject XML format
 * and returns an array of COinS titles of the same, per the COinS
 * specification.
 */
function contextObjectXMLToCOinS (doc) {

	const ns = {
		"xsi" : "http://www.w3.org/2001/XMLSchema-instance",
		"ctx" : "info:ofi/fmt:xml:xsd:ctx",
		"rft" : "info:ofi/fmt:xml:xsd:journal"
	};
	
	var objects = ZU.xpath(doc, '//ctx:context-object', ns);
	/* Bail out if no object */
	if (objects.length === 0) {
		Zotero.debug("No context object");
		return [];
	}

	var titles = [];
	
	for (var i = 0; i < objects.length; i++) {
		Zotero.debug("Processing object: " + objects[i].textContent);
		var pieces = [];
		
		var version = ZU.xpathText(objects[i], './@version', ns);
	
		pieces.push("ctx_ver="+encodeURIComponent(version));
		
		var format = ZU.xpathText(objects[i], './/ctx:format', ns);

		if (mapXMLtoKEV[format]) {
			format = mapXMLtoKEV[format];
		} else {
			// e.g. also format == "info:ofi/fmt:xml:xsd:unknown"
			// use journalArticle as default value
			format = "info:ofi/fmt:kev:mtx:journal";
		}

		pieces.push("rft_val_fmt=" + encodeURIComponent(format));
		
		var fields = ZU.xpath(objects[i], './/ctx:metadata/*/*', ns);
		for (var j in fields) {
			var name = fields[j].nodeName;
			// turn this into html
			name = name.replace(/:/, ".");
			var value = encodeURIComponent(fields[j].textContent);
			pieces.push(name + "=" + value);
		}
		
		var title = pieces.join("&");
		var span = "<span title='" + title + "' class='Z3988'></span>\n";
		Zotero.debug("Made span: " + span);
		titles.push(title);
	}
	return titles;
};

/* These two arrays are needed because COinS uses Key/Escaped-Value, which has a different
 * set of format codes. Codes from "Registry for the OpenURL Framework - ANSI/NISO Z39.88-2004":
 * http://alcme.oclc.org/openurl/servlet/OAIHandler?verb=ListRecords&metadataPrefix=oai_dc&set=Core:Metadata+Formats
 */
var mapKEVtoXML = {
	'info:ofi/fmt:kev:mtx:book'	:	'info:ofi/fmt:xml:xsd:book',	 	// Books
	'info:ofi/fmt:kev:mtx:dc'	:	'info:ofi/fmt:xml:xsd:oai_dc',		// Dublin Core
	'info:ofi/fmt:kev:mtx:dissertation' :	'info:ofi/fmt:xml:xsd:dissertation',	// Dissertations
	'info:ofi/fmt:kev:mtx:journal'	:	'info:ofi/fmt:xml:xsd:journal',		// Journals
	'info:ofi/fmt:kev:mtx:patent'	:	'info:ofi/fmt:xml:xsd:patent',		// Patents
	'info:ofi/fmt:kev:mtx:sch_svc'	:	'info:ofi/fmt:xml:xsd:sch_svc'		// Scholarly ServiceTypes
};

var mapXMLtoKEV = {
	'info:ofi/fmt:xml:xsd:book'	:	'info:ofi/fmt:kev:mtx:book',	 	// Books
	'info:ofi/fmt:xml:xsd:oai_dc'	:	'info:ofi/fmt:kev:mtx:dc',		// Dublin Core
	'info:ofi/fmt:xml:xsd:dissertation' :	'info:ofi/fmt:kev:mtx:dissertation',	// Dissertations
	'info:ofi/fmt:xml:xsd:journal'	:	'info:ofi/fmt:kev:mtx:journal',		// Journals
	'info:ofi/fmt:xml:xsd:patent'	:	'info:ofi/fmt:kev:mtx:patent',		// Patents
	'info:ofi/fmt:xml:xsd:sch_svc'	:	'info:ofi/fmt:kev:mtx:sch_svc'		// Scholarly ServiceTypes
};