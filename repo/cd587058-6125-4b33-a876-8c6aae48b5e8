function detectWeb(doc, url) {
	if (url.includes("/handle/") && text(doc, 'div.item-summary-view-metadata')) {
		var type = attr(doc, 'meta[name="DC.type"]', 'content');
		// Z.debug(type);
		if (type && type.includes("articles")) {
			return "journalArticle";
		}
		if (type && (type.includes("Book") || type.includes("Publications"))) {
			return "book";
		}
		return "report";
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}


function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;

	var rows = doc.querySelectorAll('h4.artifact-title>a');
	for (let row of rows) {
		let href = row.href;
		var title = row.textContent;
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}

	return found ? items : false;
}


function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (!items) {
				return;
			}
			var articles = [];
			for (var i in items) {
				articles.push(i);
			}
			ZU.processDocuments(articles, scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}


function scrape(doc, url) {
	// copy meta tags in body to head
	var head = doc.getElementsByTagName('head');
	var metasInBody = ZU.xpath(doc, '//body/meta');
	for (let meta of metasInBody) {
		head[0].append(meta);
	}
	
	var type = detectWeb(doc, url);
	
	var translator = Zotero.loadTranslator('web');
	// Embedded Metadata
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');

	translator.setHandler('itemDone', function (obj, item) {
		if (item.publisher && !item.place && item.publisher.includes(' : ')) {
			let placePublisher = item.publisher.split(' : ');
			item.place = placePublisher[0];
			item.publisher = placePublisher[1];
		}
		
		var firstAuthor = attr(doc, 'meta[name="DC.creator"]', 'content');
		if (firstAuthor && !firstAuthor.includes(',')) {
			item.creators[0] = {
				lastName: firstAuthor,
				creatorType: "author",
				fieldMode: 1
			};
		}
		
		var descriptions = doc.querySelectorAll('meta[name="DC.description"]');
		// DC.description doesn't actually contain other useful content,
		// except possibly the number of pages
		for (let description of descriptions) {
			var numPages = description.content.match(/(([lxiv]+,\s*)?\d+)\s*p/);
			if (numPages) {
				if (ZU.fieldIsValidForType("numPages", item.itemType)) {
					item.numPages = numPages[1];
				}
				else if (!item.extra) {
					item.extra = "number-of-pages: " + numPages[1];
				}
				else {
					item.extra += "\nnumber-of-pages: " + numPages[1];
				}
				delete item.abstractNote;
			}
		}
	
		
		item.complete();
	});

	translator.getTranslatorObject(function (trans) {
		trans.itemType = type;
		trans.doWeb(doc, url);
	});
}

function detectSearch(item) {
	return item.ISBN && (ZU.cleanISBN(item.ISBN) || '').startsWith('978924');
}

function doSearch(item) {
	let ISBN = ZU.cleanISBN(item.ISBN);
	let url = `https://apps.who.int/iris/discover/export?format=refman&list=discover&rpp=10&etal=0&query=${ISBN}&group_by=none&page=1`;
	ZU.doGet(url, function (risText) {
		if (!risText) return;

		risText = risText.replace(/^SE(\s*-\s*[0-9]+).*$/m, 'SP$1');

		var translator = Zotero.loadTranslator("import");
		translator.setTranslator("32d59d2d-b65a-4da4-b0a3-bdd3cfb979e7"); // RIS
		translator.setString(risText);
		translator.setHandler("itemDone", function (obj, item) {
			item.libraryCatalog = 'WHO IRIS';
			item.archive = '';
			
			if (item.url) {
				ZU.processDocuments(item.url, function (recordDoc) {
					let pdfURL = attr(recordDoc, 'meta[name="citation_pdf_url"]', 'content');
					if (pdfURL) {
						item.attachments.push({
							title: 'Full Text PDF',
							mimeType: 'application/pdf',
							url: pdfURL
						});
					}
					item.complete();
				});
			}
			else {
				item.complete();
			}
		});
		translator.translate();
	});
}