function detectWeb(doc, url) {
	if (url.includes("/search") && getSearchResults(doc, true)) {
		return "multiple";
	}
	else if (url.includes("/news/article.cfm")) {
		return "newspaperArticle";
	}
	return false;
}


function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('article.result-item a[href*="/news/article.cfm"]');
	for (var i = 0; i < rows.length; i++) {
		var href = rows[i].href;
		var title = ZU.trimInternal(rows[i].textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}


function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (!items) return;

			var articles = [];
			for (var i in items) {
				articles.push(i);
			}
			ZU.processDocuments(articles, scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}


function scrape(doc, url) {
	var translator = Zotero.loadTranslator('web');
	// Embedded Metadata
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
	// translator.setDocument(doc);
	
	translator.setHandler('itemDone', function (obj, item) {
		item.ISSN = "1170-0777";
		// EM looks at byline for author which does not work well here;
		// thus we delete this and do it here again properly
		item.creators = [];
		var author = text(doc, '.byline.has-author .author');
		if (!author) {
			var firstElement = text(doc, '#article-content p.element');
			if (firstElement && firstElement.includes('By')) {
				author = firstElement;
			}
		}
		if (author) {
			item.creators.push(ZU.cleanAuthor(author.replace('By', ''), "author"));
		}
		item.url = attr(doc, 'link[rel=canonical]', 'href');
		if (item.language) {
			item.language = item.language.replace('_', '-');
		}
		item.complete();
	});

	translator.getTranslatorObject(function (trans) {
		trans.itemType = "newspaperArticle";
		trans.addCustomFields({
			language: 'language',
			'article:section': 'section'
		});
		trans.doWeb(doc, url);
	});
}