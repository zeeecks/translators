var typeMapping = {
	"testo a stampa": "book",
	// "musica a stampa" ,
	"documento da proiettare o video": "videoRecording",
	"registrazione sonora": "audioRecording",
	// "musica manoscritta",
	"documento grafico": "artwork",
	// "risorsa elettronica",
	"documento cartografico a stampa": "map",
	"registrazione sonora non musicale": "audioRecording",
	// "documento multimediale",
	// "testo manoscritto",
	// "oggetto tridimensionale",
	// "documento cartografico manoscritto"
};

function detectWeb(doc, url) {
	if (url.includes("full.jsp")) {
		var type = ZU.xpathText(doc, '//tr[ td[contains(text(), "Tipo documento")] ]/td[contains(@class,"detail_value")]');
		// Z.debug(type.trim());
		return typeMapping[type.trim().toLowerCase()] || "book";
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = ZU.xpath(doc, '//li[contains(@class, "element")]//div[contains(@class, "content")]/strong/a');
	for (var i = 0; i < rows.length; i++) {
		var href = rows[i].href;
		var title = ZU.trimInternal(rows[i].textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}


function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (!items) {
				return;
			}
			var articles = [];
			for (var i in items) {
				articles.push(i);
			}
			ZU.processDocuments(articles, scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, _url) {
	var urlMarc = ZU.xpathText(doc, '(//a[contains(@title, "Scarico Marc21 del record") or contains(@title, "Download Marc21 record")]/@href)[1]');
	// Z.debug(urlMarc);
	ZU.doGet(urlMarc, function (text) {
		// call MARC translator
		var translator = Zotero.loadTranslator("import");
		translator.setTranslator("a6ee60df-1ddc-4aae-bb25-45e0537be973");
		translator.setString(text);
		translator.translate();
	});
}