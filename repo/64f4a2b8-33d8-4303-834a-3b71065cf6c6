function detectWeb(doc, _url) {
	if (getJSONLD(doc)) {
		return "newspaperArticle";
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('h2.field-title > a');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, _url) {
	let item = new Zotero.Item('newspaperArticle');
	let json = getJSONLD(doc);
	
	item.title = json.headline;
	item.abstractNote = json.description;
	item.publicationTitle = 'Ahval';
	item.date = ZU.strToISO(json.dateModified || json.datePublished);
	item.section = json.articleSection;
	item.language = doc.documentElement.lang;
	item.url = json.url;
	
	if (json.author && json.author.name != 'Ahval') {
		// usually no authors, sometimes one
		item.creators.push(ZU.cleanAuthor(json.author.name, 'author'));
	}
	
	item.attachments.push({
		title: 'Snapshot',
		document: doc
	});
	
	item.complete();
}

function getJSONLD(doc) {
	let jsonLDText = text(doc, 'script[type="application/ld+json"]');
	if (!jsonLDText.trim()) {
		return null;
	}
	
	let json = JSON.parse(jsonLDText);
	if (!json['@graph']) {
		return null;
	}
	
	for (let graphObj of json['@graph']) {
		if (graphObj['@type'] == 'NewsArticle') {
			return graphObj;
		}
	}
	
	return null;
}