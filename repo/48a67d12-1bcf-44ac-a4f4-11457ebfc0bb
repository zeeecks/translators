function detectWeb(doc, _url) {
	if (doc.querySelector('.docType_ico img[title*="Dataset"]')) {
		return "document";
	}
	else if (doc.querySelector('meta[name="citation_journal_title"]')) {
		return "journalArticle";
	}
	else if (doc.querySelector('meta[name="citation_title"]')) {
		return "report";
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('h3 > a[href*="search.do"]');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, url) {
	var translator = Zotero.loadTranslator('web');
	// Embedded Metadata
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
	translator.setDocument(doc);
	
	translator.setHandler('itemDone', function (obj, item) {
		// item.url will be empty if there's no full-text link; we don't want
		// to use the catalog page as the URL in that case.
		item.url = attr(doc, '.link-full-text a', 'href');
		item.attachments = [];
		
		if (item.itemType == 'document') {
			item.extra = (item.extra || '') + '\nType: dataset';
		}
		
		item.complete();
	});

	translator.getTranslatorObject(function (trans) {
		trans.itemType = detectWeb(doc, url);
		trans.doWeb(doc, url);
	});
}