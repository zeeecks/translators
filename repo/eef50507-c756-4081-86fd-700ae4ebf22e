function detectWeb(doc, url) {
	if (doc.querySelector('script[type="application/ld+json"]') &&
		JSON.parse(text(doc, 'script[type="application/ld+json"]'))[0]['@type'] == 'NewsArticle') {
		return "newspaperArticle";
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('[data-search-results] article h2 > a, [data-area="article-teaser-list"] article h2 > a');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, url) {
	let json = JSON.parse(text(doc, 'script[type="application/ld+json"]'))[0];
	
	var translator = Zotero.loadTranslator('web');
	// Embedded Metadata
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
	translator.setDocument(doc);

	translator.setHandler('itemDone', function (obj, item) {
		if (!Array.isArray(json.author)) {
			json.author = [json.author];
		}
		item.creators = [];
		item.creators.push(...cleanAuthorObjects(json.author));

		item.url = json.url;
		item.section = json.articleSection;
		item.date = ZU.strToISO(json.dateModified || json.dateCreated);
		item.ISSN = '2195-1349';
		item.publicationTitle = 'Der Spiegel';

		item.tags = [];
		item.tags.push(...attr(doc, 'meta[name="news_keywords"]', 'content')
			.split(', ').map(tag => ({ tag })));

		item.complete();
	});

	translator.getTranslatorObject(function (trans) {
		trans.itemType = "newspaperArticle";
		trans.doWeb(doc, url);
	});
}

function cleanAuthorObjects(authors) {
	let creators = [];
	for (let author of authors) {
		if (author['@type'] == 'Organization') continue;
		creators.push(ZU.cleanAuthor(author.name, 'author'));
	}
	return creators;
}