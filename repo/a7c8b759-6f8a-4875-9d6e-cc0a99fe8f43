function detectWeb(doc, url) {
	if (url.indexOf("/content/document")>-1) {
		var type = ZU.xpathText(doc, '//span[contains(@class, "lineage-item")]');
		switch (type) {
			case "Letter":
			case "Postcard":
				return "letter";
			case "Photo":
			case "Personal Item":
				return "artwork";
		}
	} else if (getSearchResults(doc, true)) {
		return "multiple";
	}
}


function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = ZU.xpath(doc, '//h3[contains(@class, "title")]//a');
	for (var i=0; i<rows.length; i++) {
		var href = rows[i].href;
		var title = ZU.trimInternal(rows[i].textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}


function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (!items) {
				return true;
			}
			var articles = [];
			for (var i in items) {
				articles.push(i);
			}
			ZU.processDocuments(articles, scrape);
		});
	} else {
		scrape(doc, url);
	}
}


function scrape(doc, url) {
	var newItem = new Zotero.Item(detectWeb(doc, url));
	newItem.title = ZU.xpathText(doc, '//div[contains(@class, "breadcrumbs")]//h1');
	newItem.type = ZU.xpathText(doc, '//span[contains(@class, "lineage-item")]');
	var date = ZU.xpathText(doc, '//div[span[contains(@class, "field-label") and contains(text(), "Date")]]/text()');
	if (date) {
		newItem.date = ZU.strToISO(date);
	}
	var author = ZU.xpathText(doc, '//div[div[contains(@class, "field-label") and contains(text(), "From")]]/div[contains(@class, "field-items")]');
	if (author) {
		newItem.creators.push(ZU.cleanAuthor(author, "author"));
	}
	var recipient = ZU.xpathText(doc, '//div[div[contains(@class, "field-label") and contains(text(), "To")]]/div[contains(@class, "field-items")]');
	if (recipient) {
		newItem.creators.push(ZU.cleanAuthor(recipient, "recipient"));
	}
	newItem.url = url;
	newItem.complete();
}