function detectWeb(doc, url) {
	if (url.match(/\d\/?$/) && doc.querySelector('.entry-title')) {
		return "journalArticle";
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}


function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('a.ref-wrapper');
	for (var i = 0; i < rows.length; i++) {
		var href = rows[i].href;
		var title = ZU.trimInternal(text(rows[i], '.ref-title'));
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}


function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (!items) {
				return;
			}
			var articles = [];
			for (var i in items) {
				articles.push(i);
			}
			ZU.processDocuments(articles, scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, url) {
	let item = new Zotero.Item("journalArticle");
	
	let bmcrID = text(doc, '.ref-id').replace(/^BMCR /, '');
	
	let title = text(doc, '.entry-title');
	// trim BMCR ID off the beginning when present
	item.title = "Review of: "
		+ ZU.trimInternal(title).replace(/^\d{2,4}\.\d{1,2}\.\d{1,2}, /, '');
	item.shortTitle = '';
	
	let authors = doc.querySelectorAll('.meta-affiliation[itemprop="author"] [itemprop="name"]');
	for (let author of authors) {
		item.creators.push(ZU.cleanAuthor(author.textContent, "author"));
	}
	
	let reviewedAuthors = doc.querySelectorAll('.entry-citation [itemprop="author"]');
	for (let author of reviewedAuthors) {
		item.creators.push(ZU.cleanAuthor(author.textContent, "reviewedAuthor"));
	}

	item.date = ZU.strToISO(attr(doc, 'meta[itemprop="datePublished"]', 'content'));
	item.extra = "BMCR ID: " + bmcrID;
	
	item.publicationTitle = "Bryn Mawr Classical Review";
	item.journalAbbreviation = "Bryn Mawr Class. Rev.";
	item.ISSN = "1055-7660";
	item.url = url;
	item.attachments.push({
		document: doc,
		title: "Full Text Snapshot"
	});
	
	item.complete();
}