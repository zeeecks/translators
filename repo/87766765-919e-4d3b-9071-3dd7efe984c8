function detectWeb(doc, url) {
	var types = ZU.xpath(doc, '//meta[@name="DC.type"]/@content');
	for (let i = 0, n = types.length; i < n; i++) {
		switch (types[i].textContent.toLowerCase()) {
			case 'journalarticle':
				return 'journalArticle';
			case 'collection':
				return 'multiple';
			case 'booksection':
				return 'bookSection';
		}
	}

	if (ZU.xpath(doc, '//div[@id="inside"]/div[@class="sommaire"]/dl[@class="documents"]/dd[@class="titre"]/a').length
		|| ZU.xpath(doc, '//ul[@class="summary"]//div[@class="title"]/a').length) {
		return "multiple";
	}
	else if (ZU.xpath(doc, '//h1[@id="docTitle"]/span[@class="text"]').length
		|| /document\d+/.test(url)) {
		return "journalArticle";
	}
	return false;
}

function scrape(doc, url) {
	// Example: https://journals.openedition.org/remi/persee-144614
	if (/persee-\d+/.test(url)) {
		// the article is on PersÃ©e portal, getting it to be translated by COinS
		let translator = Zotero.loadTranslator("web");
		translator.setTranslator("05d07af9-105a-4572-99f6-a8e231c0daef");
		translator.setDocument(doc);
		translator.translate();
	}
	else {
		// use Embeded Metadata
		let translator = Zotero.loadTranslator('web');
		translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
		translator.setDocument(doc);
		translator.setHandler('itemDone', function (obj, item) {
			// editor and translator declarations not part of DC spec
			// editors (and compilers)
			var editors = ZU.xpath(doc, '//meta[@name="DC.contributor.edt" or @name="DC.contributor.com"]/@content');
			for (let i = 0, n = editors.length; i < n; i++) {
				item.creators.push(
					ZU.cleanAuthor(editors[i].textContent, 'editor', true));
			}
			// translators
			var trans = ZU.xpath(doc,
				'//meta[@name="DC.contributor.trl"]/@content');
			for (let i = 0, n = trans.length; i < n; i++) {
				item.creators.push(
					ZU.cleanAuthor(trans[i].textContent, 'translator', true));
			}
			// fix all caps for author last names
			for (let i = 0; i < item.creators.length; i++) {
				if (item.creators[i].lastName == item.creators[i].lastName.toUpperCase()) {
					item.creators[i].lastName = ZU.capitalizeTitle(item.creators[i].lastName.toLowerCase(), true);
				}
			}
			// set abstract and keywords based on documents language
			var locale = ZU.xpathText(doc, '//meta[@name="citation_language"]/@content');
			// default to french if not set
			locale = locale ? locale.toLowerCase() : 'fr';

			// get abstract and tags in document language
			// or the first locale available
			item.abstractNote = ZU.xpathText(doc,
				'//meta[@name="description" or @name="DC.description"][lang("' + locale + '") or @lang="' + locale + '"][1]/@content')
				|| ZU.xpathText(doc,
					'//meta[@name="description" or @name="DC.description"][1]/@content');

			var tags = ZU.xpathText(doc,
				'//meta[@name="keywords" or @name="DC.subject"][lang("' + locale + '") or @lang="' + locale + '"][1]/@content')
				|| ZU.xpathText(doc,
					'//meta[@name="keywords" or @name="DC.subject"][1]/@content');
			if (tags) {
				item.tags = tags.trim().split(/\s*,\s*/);
			}

			delete item.extra;
		
			// The site lists all editor of journals as editor in the header. Remove them.
			// I don't think there is a use case for editors for journal articles
			if (item.itemType === "journalArticle") {
				for (let i = 0; i < item.creators.length; i++) {
					if (item.creators[i].creatorType === "editor") {
						item.creators.splice(i--, 1);
					}
				}
			}
			
			for (let i = 0; i < item.attachments.length; i++) {
				if (item.attachments[i].title == 'Snapshot') {
					item.attachments.splice(i, 1);
					break;
				}
			}
			
			// store the language-specific url
			item.url = url;

			item.complete();
		});

		translator.getTranslatorObject(function (trans) {
			// override some of the mappings
			trans.addCustomFields({
				'prism.number': 'issue',
				'prism.volume': 'volume',
				'DC.title': 'title'
			});

			trans.doWeb(doc, url);
		});
	}
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		var results = ZU.xpath(doc, '//div[@id="inside"]/div[@class="sommaire"]/dl[@class="documents"]/dd[@class="titre"]');
		if (!results.length) {
			results = ZU.xpath(doc, '//ul[@class="summary"]//div[@class="title"]');
		}

		Zotero.selectItems(ZU.getItemArray(doc, results), function (selectedItems) {
			if (!selectedItems) return true;

			var urls = [];
			for (let i in selectedItems) {
				urls.push(i);
			}

			ZU.processDocuments(urls, scrape);

			return true;
		});
	}
	else {
		scrape(doc, url);
	}
}