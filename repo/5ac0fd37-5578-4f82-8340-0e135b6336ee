function detectWeb(doc, url) {
	if (url.includes('/my-articles')) {
		if (getItems(doc)) {
			return 'multiple';
		}
	}
	else if (url.includes('/search?q')) {
		if (getItems(doc)) {
			return 'multiple';
		}
	}
	else if (url.includes('/browse/')) {
		let browse = doc.getElementById('toc');
		if (browse) {
			Zotero.monitorDOMChanges(browse.parentElement);
		}
		if (getItems(doc)) {
			return 'multiple';
		}
	}
	else if (url.includes('/details/')) {
		return 'journalArticle';
	}
	return false;
}

function doWeb(doc, url) {
	let type = detectWeb(doc, url);
	if (type == 'multiple') {
		let list = getItems(doc);
		Zotero.selectItems(list, function (selectedItems) {
			if (!selectedItems) return true;
			let articles = [];
			for (let i in selectedItems) {
				let article = '/ris?uri=' + i;
				articles.push(article);
			}
			ZU.doGet(articles, scrape);
			return false;
		}
		);
	}
	else {
		let uri = getURI(url);
		let article = '/ris?uri=' + uri;
		ZU.doGet(article, scrape);
	}
	return false;
}

function getURI(url) {
	var a = '';
	var b = '';
	if (url.includes('/details/')) {
		a = url.indexOf('details');
		b = url.indexOf('xml');
		return url.substring(a + 7, b + 3);
	}
	else if (url.includes('/resolve/')) {
		if (url.includes('.xml')) {
			a = url.indexOf('/resolve/');
			b = url.indexOf('xml');
			return url.substring(a + 9, b + 3);
		}
		else {
			return '/' + url.split('/resolve/')[1] + '.xml';
		}
	}
	return false;
}

function getItems(doc) {
	var items = {}, found = false;
	var titles = '';
	if (doc.URL.includes('/my-articles')) {
		titles = ZU.xpath(doc.getElementById('my-articles-list'), './/div[@class = "title"]/h3/a');
		for (let i = 0; i < titles.length; i++) {
			let title = ZU.trimInternal(titles[i].textContent);
			let uri = getURI(titles[i].href);
			items[uri] = title;
			found = true;
		}
	}
	else {
		if (doc.URL.includes('/browse')) {
			titles = ZU.xpath(doc, './/div/h3/a');
		}
		else {
			titles = ZU.xpath(doc.getElementById('result-list'), './/div[@class = "details"]/h3/a');
		}
		for (let i = 0; i < titles.length; i++) {
			let title = ZU.trimInternal(titles[i].textContent);
			let uri = getURI(titles[i].href);
			items[uri] = title;
			found = true;
		}
	}
	return found ? items : false;
}

function scrape(text) {
	// loading RIS transformer.
	let translator = Zotero.loadTranslator('import');
	translator.setTranslator('32d59d2d-b65a-4da4-b0a3-bdd3cfb979e7');
	translator.setString(text);
	translator.setHandler('itemDone', function (obj, item) {
		let uri = getURI(item.attachments[0].path);
		let pdfURL = '/pdf' + uri;
		item.url = 'https://journals.scholarsportal.info/details' + uri;
		item.attachments = [{
			url: pdfURL,
			title: 'Scholars Portal Full Text PDF',
			mimeType: 'application/pdf'
		}];
		item.complete();
	});
	translator.translate();
}