function detectWeb(doc, url) {
	if (/articles/.test(url)) {
		return "blogPost";
	} else if (getSearchResults(doc, true)) {
		return "multiple";
	}
}


function scrape(doc, url) {
	var translator = Zotero.loadTranslator('web');
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48'); // embedded metadata (EM)
	translator.setDocument(doc);
	
	translator.setHandler('itemDone', function (obj, item) { // corrections to EM
		item.itemType = "blogPost";
		if (item.publicationTitle) {
			item.publicationTitle = item.publicationTitle.replace('.net','');
		}
		if (item.abstractNote) {
			item.abstractNote = item.abstractNote.replace(/&hellip;/,"...");
		}
		var json_ld = doc.querySelector('script[type="application/ld+json"]'); // JSON-LD not yet built into EM
		if (json_ld) {
			var json = JSON.parse(json_ld.textContent);
			item.date = json.datePublished;
			if (json.author && json.author.name) {
				item.creators.push(ZU.cleanAuthor(json.author.name, "author"));
			}
		}
		if (item.creators.length === 0) { // usgamer.net doesn't have JSON-LD and Eurogamer.de's didn't include authors
			var authorMetadata = doc.querySelectorAll('.author .name a, .details .author a');
			for (let author of authorMetadata) {
				item.creators.push(ZU.cleanAuthor(author.text, "author"));
			}
		}
		if (!item.date) { // usgamer.net doesn't have JSON-LD
			var dateMetadata = doc.querySelector('span.published');
			if (dateMetadata) {
				item.date = ZU.strToISO(dateMetadata.getAttribute('content'));
			}
		}
		var tags = doc.querySelectorAll('.tags a');
		if (tags && url.includes('usgamer.net')) { // Eurogamer tags weren't worth it but USgamer's are good
			for (let tagObj of tags) {
				var tag = tagObj.textContent;
				if (tag == tag.toLowerCase()) {
					tag = tag.replace(/\w/, c => c.toUpperCase());
				}
				item.tags.push(tag);
			}
		}
		item.complete();
	});

	translator.getTranslatorObject(function(trans) {
		trans.doWeb(doc, url);
	});
}


function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('a.gs-title, .details .title a');
	for (let i=0; i<rows.length; i++) {
		let href = rows[i].href;
		let title = ZU.trimInternal(rows[i].textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}


function doWeb(doc, url) {
	switch (detectWeb(doc, url)) {
		case "multiple":
			Zotero.selectItems(getSearchResults(doc, false), function (items) {
				if (!items) {
					return true;
				}
				var articles = [];
				for (var i in items) {
					articles.push(i);
				}
				ZU.processDocuments(articles, scrape);
			});
			break;
		default:
			scrape(doc, url);
			break;
	}
}