var mapping = {
	"journal" : "publicationTitle",
	"volume" : "volume",
	"issue" : "issue",
	"year" : "date",
	"pages" : "pages",
	"section" : "extra"
}


function detectWeb(doc, url) {
	if ( ZU.xpath(doc, '//div[contains(@class, "content")]/fieldset/legend').length ) { // Publication Information
		if (getSearchResults(doc, true)) {
			return "multiple";
		} else {
			return "journalArticle";
		}
	}
	if (url.indexOf('search')>-1 && getSearchResults(doc, true)) {
		return "multiple";
	}
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = ZU.xpath(doc, '//div[contains(@class, "content")]//dt//a|//div[contains(@class, "content")]//h3[contains(@class, "title")]/a|//span[contains(@class, "field-content")]/a');
	for (var i=0; i<rows.length; i++) {
		var href = rows[i].href;
		var title = ZU.trimInternal(rows[i].textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (!items) {
				return true;
			}
			var articles = new Array();
			for (var i in items) {
				articles.push(i);
			}
			ZU.processDocuments(articles, scrape);
		});
	} else {
		scrape(doc, url);
	}
}


function scrape(doc, url) {
	var item = new Zotero.Item(detectWeb(doc, url));
	
	//title
	var title = ZU.xpathText(doc, '//h1[contains(@class, "title")]');
	item.title = title;
	
	//authors
	//Examples:
	//Edward H. Burtt, Jr. 
	//James Hengeveld, Keith A. Mcmullen, Geoffrey A. Williamson
	//==> The author string is splitted by ',' into the individual
	//authors, but for suffixes this will be corrected again by
	//some heuristic. This heuristic seperates another autor
	//from a suffix by checking if the string consists any space
	//and its length is less than 5.
	var authors = ZU.xpathText(doc, '//div[contains(@class, "content")]/div[contains(@class, "field-name-field-authors")]/div/div/text()');
	if (authors) {
		var authorsSplit = authors.split(',');
		var index = 0;
		for (var m=0; m<authorsSplit.length; m++) {
			var value = ZU.trim(authorsSplit[m]);
			if (value != '') {
				if (value.indexOf(' ') == -1 && value.length<5 && index>0) {
					item.creators[index-1].firstName += ', ' + value;//Jr. or III.
				} else {
					item.creators.push( ZU.cleanAuthor( value, "author") );
					index++;
				}
			
			}
		}
	}
	
	//other fields
	var fields = ZU.xpath(doc, '//div[contains(@class, "content")]/fieldset/div/div');
	for (var k=0; k<fields.length; k++) {
		var fieldName = ZU.xpathText(fields[k], './div[contains(@class, "field-label")]').replace(':','').toLowerCase().trim();
		var fieldValue = ZU.xpathText(fields[k], './div[contains(@class, "field-items")]').replace(',','').trim();
		if (mapping[fieldName]) {
			item[ mapping[fieldName] ] = fieldValue;
		} else {
			Z.debug('Unrecognized field: ' + fieldName);
		}
	}
	
	
	//PDF
	var pdfLink = ZU.xpath(doc, '//div[contains(@class, "field-name-upload")]//a[contains(@type, "application/pdf")]');
	if (pdfLink.length>0) {
		item.attachments.push({
			title : "Full Text PDF",
			url : pdfLink[0].href,
			mimeType : "application/pdf"
		});
	}
	//link to SORA entry
	item.attachments.push({
		title : "SORA Entry",
		url : url,
		mimeType : "text/html",
		snapshot : false
	});
	
	item.complete();
}