function detectWeb(doc, _url) {
	if (doc.querySelector('meta[name="citation_title"]')) {
		if (doc.querySelector('meta[name="citation_conference_title"]')) {
			return "conferencePaper";
		}
		else {
			return "journalArticle";
		}
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('.itemHeadline > a');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, url) {
	var translator = Zotero.loadTranslator('web');
	// Embedded Metadata
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
	translator.setDocument(doc);
	
	translator.setHandler('itemDone', function (obj, item) {
		// XPath works best here
		item.abstractNote = ZU.xpathText(doc,
			'//b[contains(text(), "Abstract")]/following-sibling::span');
		item.libraryCatalog = 'MPG PuRe';
		item.date = item.date.replace(/\//g, '-');
		
		if (!item.url || item.url.includes('//pure.mpg.de/pubman/')) {
			item.url = text(doc, '#form1\\:lnkCitationURLVersionPid') || item.url;
		}
		
		item.attachments = item.attachments.filter(a => a.title != 'Snapshot');
		
		item.complete();
	});

	translator.getTranslatorObject(function (trans) {
		trans.doWeb(doc, url);
	});
}