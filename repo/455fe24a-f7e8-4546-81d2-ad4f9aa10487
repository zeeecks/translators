function detectWeb(doc, url) {
	if (/theintercept\.com\/\d{4}\/\d{2}\/\d{2}\//.test(url)) {
		return "blogPost";
	}
	else if (url.includes("/document/")) {
		return "document";
	}
	else if (/(theintercept\.com\/search\/\?s=)|(theintercept\.com\/?$)/.test(url) && getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function scrape(doc, _url) {
	var item = new Zotero.Item("blogPost");
	item.blogTitle = "The Intercept";
	item.language = "en-US";
	var ldjson = JSON.parse(text(doc, 'script[type="application/ld+json"]'));
	item.url = ldjson.url;
	item.title = ldjson.headline;
	item.date = ldjson.dateCreated;
	item.abstractNote = text(doc, 'meta[name="description"]');
	item.attachments.push({
		document: doc,
		title: "Snapshot"
	});

	// Authors
	if (ldjson.author.length) {
		do {
			item.creators.push(ZU.cleanAuthor(ldjson.author[0], "author"));
			ldjson.author.shift();
		}
		while (ldjson.author.length);
	}

	// Feature articles json omits the feature title
	var featureTitle = text(doc, '.Post-feature-title');
	if (featureTitle) {
		item.title = featureTitle.concat(": ", item.title);
	}
	item.complete();
}

function scrapeDocument(doc, url) {
	var item = new Zotero.Item("document");
	item.publisher = "The Intercept";
	item.language = "en-US";
	item.url = url;
	item.title = text(doc, '.BasicDocumentPage-title');
	item.date = text(doc, '.BasicDocumentPage-date');
	if (item.date) { // don't perform on empty string
		item.date = ZU.strToISO(item.date);
	}
	// no item.abstractNote: no description given
	item.attachments.push({
		title: item.title,
		mimeType: "application/pdf",
		url: attr(doc, 'a[class$="-navigation-download"]', 'href')
	});

	item.complete();
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('.Promo-title, h1.HomeFeature-title');
	var links = doc.querySelectorAll('.Promo-link, a.HomeFeature-link');
	for (var i = 0; i < rows.length; i++) {
		var href = links[i].href;
		var title = ZU.trimInternal(rows[i].textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (!items) {
				return;
			}
			var articles = [];
			for (var i in items) {
				articles.push(i);
			}
			ZU.processDocuments(articles, scrape);
		});
	}
	else if (detectWeb(doc, url) == "document") {
		scrapeDocument(doc, url);
	}
	else if (detectWeb(doc, url) == "blogPost") {
		// if this if statement is removed, the multi page attempts to feed itself into the scrape function
		scrape(doc, url);
	}
}