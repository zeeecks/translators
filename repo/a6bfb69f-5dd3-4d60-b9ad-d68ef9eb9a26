function detectWeb(doc, _url) {
	if (doc.querySelector('.artworkInfo')) {
		return "artwork";
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('.artworkBox p a[href*="/artists/"]');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, _url) {
	let item = new Zotero.Item('artwork');
	let json = JSON.parse(text(doc, 'script[type="application/ld+json"]'));
	
	item.title = json.name;
	item.abstractNote = json.description;
	item.artworkMedium = (json.artMedium || []).join(',');
	item.artworkSize = [json.width, json.height, json.depth]
		.map(dim => dim.name).filter(s => s && !/^0\s/.test(s)).join(' x ');
	item.date = json.dateCreated;
	item.url = attr(doc, 'link[rel="canonical"]', 'href');
	
	if (json.creator) {
		item.creators.push(ZU.cleanAuthor(json.creator.name, 'artist'));
	}
	
	if (json.contributor) {
		item.creators.push(ZU.cleanAuthor(json.contributor.name, 'contributor'));
	}
	
	if (json.image) {
		item.attachments.push({
			title: 'Artwork Image',
			mimeType: 'image/jpeg',
			url: json.image
		});
	}
	
	item.complete();
}