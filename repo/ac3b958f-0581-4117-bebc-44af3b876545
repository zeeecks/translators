function detectWeb(doc, url) {
	if (url.includes('/p/')) {
		return "blogPost";
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('a.post-preview-title[href*="/p/"]');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, url) {
	let item = new Zotero.Item('blogPost');
	let json = JSON.parse(text(doc, 'script[type="application/ld+json"]'));
	
	item.title = json.headline;
	item.abstractNote = json.description;
	item.date = ZU.strToISO(json.dateModified || json.datePublished);
	if (Array.isArray(json.author)) {
		for (let author of json.author) {
			item.creators.push(ZU.cleanAuthor(author.name, 'author'));
		}
	}
	else if (json.author && json.author.name) {
		item.creators.push(ZU.cleanAuthor(json.author.name, 'author'));
	}
	item.blogTitle = json.publisher.name;
	item.url = url.replace(/[#?].*$/, '');
	item.attachments.push({
		title: 'Snapshot',
		document: doc
	});
	item.websiteType = 'Substack newsletter';
	
	item.complete();
}