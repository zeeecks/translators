function detectWeb(doc, url) {
	url = url.toLowerCase();
	if (url.includes("/abstract.cfm") || url.includes("/viewmedia.cfm")) {
		var conference = ZU.xpathText(doc, '//meta[@name="citation_conference_title"]/@content');
		var journal = ZU.xpathText(doc, '//meta[@name="citation_journal_title"]/@content');
		if (conference) {
			return "conferencePaper";
		}
		else if (journal) {
			return "journalArticle";
		}
		else {
			return "book";
		}
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}


function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = ZU.xpath(doc, '//ul[@id="results"]/li[contains(@class, "sr-item")]//h3/a|//p[contains(@class, "article-title")]/a');
	for (var i = 0; i < rows.length; i++) {
		var href = rows[i].href;
		var title = ZU.trimInternal(rows[i].textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}


function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (!items) {
				return;
			}
			var articles = [];
			for (var i in items) {
				articles.push(i);
			}
			ZU.processDocuments(articles, scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}


function scrape(doc, url) {
	var translator = Zotero.loadTranslator('web');
	// Embedded Metadata
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
	// translator.setDocument(doc);

	translator.setHandler('itemDone', function (obj, item) {
		item.title = decodeEntities(item.title, doc);
		item.bookTitle = decodeEntities(item.bookTitle, doc);
		item.publicationTitle = decodeEntities(item.publicationTitle, doc);
		item.rights = decodeEntities(item.rights, doc);
		
		if (item.abstractNote) {
			item.abstractNote = ZU.trimInternal(item.abstractNote);
		}

		item.complete();
	});

	translator.getTranslatorObject(function (trans) {
		trans.doWeb(doc, url);
	});
}


function decodeEntities(str, doc) {
	if (!str || !str.includes('&') || !doc.createElement) {
		return str;
	}
	
	// https://stackoverflow.com/questions/7394748/whats-the-right-way-to-decode-a-string-that-has-special-html-entities-in-it/7394787#7394787
	var textarea = doc.createElement('textarea');
	textarea.innerHTML = str;
	return textarea.value;
}