function detectWeb(doc, url) {
	if (url.includes('/?s=') && getSearchResults(doc, true)) return "multiple";
	else if (doc.body.className.includes("single-post")) return "blogPost";
	return false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (!items) return;

			var articles = [];
			for (var i in items) {
				articles.push(i);
			}
			ZU.processDocuments(articles, scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = ZU.xpath(doc, '//div[@class="container container-small"]/article/h2/a');
	for (var i = 0; i < rows.length; i++) {
		var href = rows[i].href;
		var title = ZU.trimInternal(rows[i].textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function scrape(doc, url) {
	var translator = Zotero.loadTranslator('web');
	// Embedded Metadata
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
	translator.setDocument(doc);

	translator.setHandler('itemDone', function (obj, item) {
		if (item.date) item.date = ZU.strToISO(item.date);
		var authors = ZU.xpath(doc, '//a[@rel="author"]');
		for (let i = 0; i < authors.length; i++) {
			if (authors[i].textContent != 'TV By The Numbers') {
				item.creators.push(ZU.cleanAuthor(authors[i].textContent, "author"));
			}
		}
		item.publicationTitle = "TV By The Numbers";
		var tags = ZU.xpath(doc, '//a[@rel="tag"]');
		item.tags = [];
		for (let i = 0; i < tags.length; i++) {
			item.tags.push(tags[i].textContent);
		}
		item.complete();
	});

	translator.getTranslatorObject(function (trans) {
		trans.itemType = "blogPost";
		trans.doWeb(doc, url);
	});
}