function detectWeb(doc, url) {
	if (doc.title.toLowerCase().match(/:: search|:: recherche/)) {
		return "multiple";
	}
	else if (url.match(/sic_\d+|tel-\d+/)) {
		return "journalArticle";
	}
	return false;
}

var metaTags = {
	"DC.relation": "url",
	"DC.date": "date",
	"DC.description": "abstractNote",
	"DC.creator": "creators",
	"DC.title": "title",
};

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		var items = Zotero.Utilities.getItemArray(doc, doc, /sic_\d+|tel-\d+/);
		Zotero.selectItems(items, function (items) {
			if (!items) return;
			ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc);
	}
}

function scrape(doc) {
	var xpath = '//meta[@name]';
	var data = {};
	var metas = doc.evaluate(xpath, doc, null, XPathResult.ANY_TYPE, null);
	var meta;

	meta = metas.iterateNext();
	while (meta) {
		if (data[meta.name]) {
			data[meta.name] = data[meta.name] + ";" + meta.content;
		}
		else {
			data[meta.name] = meta.content;
		}
		meta = metas.iterateNext();
	}

	var item = new Zotero.Item("journalArticle");
	for (var tag in metaTags) {
		if (tag == "DC.creator") {
			var authors = data['DC.creator'].split(";");
			for (var i = 0; i < authors.length; i++) {
				var aut = authors[i];
				aut = aut.replace(/^([^,]+),\s+(.*)$/, "$2 $1");
				item.creators.push(Zotero.Utilities.cleanAuthor(aut, "author"));
			}
		}
		else {
			item[metaTags[tag]] = data[tag];
		}
	}
	
	var pdfurl = data.citation_pdf_url;
	
	if (pdfurl) {
		item.attachments = [
			{ url: item.url, title: "AOSIC Snapshot", mimeType: "text/html" },
			{ url: pdfurl, title: "AOSIC Full Text PDF", mimeType: "application/pdf" }
		];
	}
	item.complete();
}