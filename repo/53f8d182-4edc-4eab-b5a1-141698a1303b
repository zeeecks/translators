function detectWeb(doc, url) {
	if (url.includes('blogs.wsj.com')) {
		return "blogPost";
	}
	else if (url.includes('articles')) {
		return "newspaperArticle";
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = ZU.xpath(doc, '//h3[contains(@class, "headline")]/a');
	for (var i = 0; i < rows.length; i++) {
		var href = rows[i].href;
		var title = ZU.trimInternal(rows[i].textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}


function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (!items) return;

			var articles = [];
			for (var i in items) {
				articles.push(i);
			}
			ZU.processDocuments(articles, scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}


function scrape(doc, url) {
	var translator = Zotero.loadTranslator('web');
	var type = detectWeb(doc, url);
	// Embedded Metadata
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
	translator.setHandler('itemDone', function (obj, item) {
		item.ISSN = "0099-9660";
		item.language = "en-US";
		if (type == "newspaperArticle") {
			item.publicationTitle = "Wall Street Journal";
		}
		// Multiple authors are not seperated into multiple metadata fields
		// and will therefore be extracted wrongly into one author. We
		// correct this by using the JSON-LD data.
		var jsonld = ZU.xpathText(doc, '//script[@type="application/ld+json"]');
		if (jsonld) {
			var firstContext = jsonld.indexOf("@context");
			if (firstContext > 0) {
				var secondContext = jsonld.indexOf("@context", firstContext + 1);
				// sometimes there is a second context at the end, which makes the
				// json non-valid, therefore we delete that before
				// e.g. https://www.wsj.com/articles/the-turnabout-on-religious-freedom-11561155218
				if (secondContext > -1) {
					Z.debug("Delete second context from JSON data");
					jsonld = jsonld.substr(0, secondContext - 1).replace(/[, {"]*$/, '');
				}
			}
			var data = JSON.parse(jsonld);
			if (data.creator && data.creator.length) {
				item.creators = [];
				for (var i = 0; i < data.creator.length; i++) {
					item.creators.push(ZU.cleanAuthor(data.creator[i], "author"));
				}
			}
		}
		item.complete();
	});
	
	translator.getTranslatorObject(function (trans) {
		trans.itemType = type;
		trans.addCustomFields({
			"article.published": "date"
		});
		trans.doWeb(doc, url);
	});
}