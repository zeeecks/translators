/*
   Copyright (C) 2013-2021 Sebastian Karcher

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU Affero General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU Affero General Public License for more details.

   You should have received a copy of the GNU Affero General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/


function detectWeb(doc, _url) {
	let copyright = text(doc, '.copy-right');
	if (!copyright.includes('Elsevier')) {
		return false;
	}
	
	if (doc.querySelector('meta[name="citation_journal_title"]')) {
		return "journalArticle";
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('h4.meta__title > a');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, url) {
	var abstract = ZU.xpathText(doc, '//div[@class="abstract"]/div[contains(@class, "content")]/section/*', null, '\n');
	if (!abstract) abstract = ZU.xpathText(doc, '//div[@class="tContent"]/div[contains(@class, "content")]/section/*', null, '\n');
	var keywords = ZU.xpath(doc, '//div[@class="keywords"]/a');
	if (!keywords.length) keywords = ZU.xpath(doc, '//div[@class="tContent"]/p/span[contains(@class, "keyword")]');
	// We call the Embedded Metadata translator to do the actual work
	var translator = Zotero.loadTranslator('web');
	// use Embedded Metadata
	translator.setTranslator("951c027d-74ac-47d4-a107-9c3069ab7b48");
	translator.setDocument(doc);
	translator.setHandler('itemDone', function (obj, item) {
		var m;
		if (item.publicationTitle && (m = item.publicationTitle.match(/^(.+), (the)$/i))) {
			item.publicationTitle = m[2] + ' ' + m[1];
		}
		if (item.date) {
			item.date = ZU.strToISO(item.date);
		}
		item.url = url;
		
		if (item.tags.length == 0) {
			for (var i in keywords) {
				var kw = keywords[i].textContent.trim();
				if (kw) item.tags.push(kw);
			}
		}
		// remove duplicate PMIDs
		if (item.extra) {
			item.extra = item.extra.replace(/(^PMID: \d+),.+/, "$1");
		}
		item.abstractNote = abstract;
		item.complete();
	});
	translator.translate();
}