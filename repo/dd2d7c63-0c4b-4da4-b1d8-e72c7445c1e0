function detectWeb(doc, url) {
	var type = ZU.xpathText(doc, '//meta[@name="DC.type"]/@content');
	if (type !== null && type.length > 0) {
		return "thesis";
	} else if (getSearchResults(doc, url, true)) {
		return "multiple";
	}
}


var mappingRights = {
	"info:eu-repo/semantics/embargoedAccess": "Embargoed Access",
	"info:eu-repo/semantics/openAccess": "Open Access"
};

function getSearchResults(doc, url, checkOnly) {
	var items = {};
	var found = false;
	var rows = ZU.xpath(doc, '//div[@class="artifact-title"]/a');
	if (!rows.length) return false;
	for (var i = 0; i < rows.length; i++) {
		if (rows[i].href  &&  rows[i].href.indexOf('/handle/') > -1) {
			var href = rows[i].href;
			var title = rows[i].textContent;
		}
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, url, false), function(items) {
			if (!items) {
				return true;
			}
			var articles = [];
			for (var i in items) {
				articles.push(i);
			}
			//Z.debug(articles)
			ZU.processDocuments(articles, scrape);
		});
	} else {
		scrape(doc, url);
	}
}

function scrape(doc, url) {

	var translator = Zotero.loadTranslator('web');
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48'); //https://github.com/zotero/translators/blob/master/Embedded%20Metadata.js
	translator.setDocument(doc);
	translator.setHandler('itemDone', function(obj, item) {
		//add type
		//converting internal info:eu-repo/semantics/doctoralThesis notation to "Ph.D. Thesis" only for collections and items
		if (item.url.indexOf("/handle/") > -1) {
			item.thesisType = "Ph.D. Thesis";
		}

		//add tags -> from rights
		var rights = ZU.xpath(doc, '//meta[contains(@name, "DC.rights")]');
		if (rights.length > 0) {
			item.rights = [];
			for (var t = 0; t < rights.length; t++) {
				if (mappingRights[rights[t].content]) {
					item.rights.push(mappingRights[rights[t].content]);
				}
			}
			if (rights.length > 0) {
				item.rights = item.rights.join(", ");
			}
		}
		item.complete();
	});
	translator.getTranslatorObject(function(trans) {
		trans.itemType = "thesis";
		trans.doWeb(doc, url);
	});
}