function detectWeb(doc, url) {
	if (!doc.querySelector('.built-on > a[href*="pubpub"]')
		&& !url.includes('pubpub.org')) {
		return false;
	}
	
	// this won't match search result pages not hosted on pubpub.org, but the
	// results URL (/search?q=) is just too generic to justify including it in
	// the target.
	if (getSearchResults(doc, true)) {
		return "multiple";
	}
	else if (doc.querySelector('#search-container')) {
		Z.monitorDOMChanges(doc.querySelector('#search-container'));
	}
	else if (doc.querySelector('meta[name="citation_title"]')) {
		if (doc.querySelector('meta[name="citation_inbook_title"]')) {
			return "bookSection";
		}
		// this is, of course, a bad heuristic, but it's unlikely to lead to
		// false positives and PubPub doesn't give us anything better.
		else if (attr(doc, 'meta[property="og:site_name"]', 'content').endsWith('Rxiv')) {
			return "report";
		}
		else {
			return "journalArticle";
		}
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('.title > a.pub-title');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, url) {
	var translator = Zotero.loadTranslator('web');
	// Embedded Metadata
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48');
	translator.setDocument(doc);
	
	translator.setHandler('itemDone', function (obj, item) {
		if (!item.publicationTitle) {
			item.publicationTitle = attr(doc, 'meta[property="og:site_name"]', 'content');
		}

		if (item.publicationTitle.endsWith('Rxiv')) {
			item.itemType = 'report';
			item.extra = (item.extra || '') + '\nType: article';
		}
		
		if (item.itemType == 'bookSection' && item.bookTitle) {
			delete item.publicationTitle;
		}
		
		if (item.publisher == 'PubPub') {
			delete item.publisher;
		}
		
		delete item.institution;
		delete item.company;
		delete item.label;
		delete item.distributor;
		
		if (item.date) {
			item.date = ZU.strToISO(item.date);
		}
		
		if (item.ISSN == ',') {
			delete item.ISSN;
		}
		
		if (item.attachments.length > 1) {
			item.attachments = item.attachments.filter(at => at.title != 'Snapshot');
		}
		
		item.complete();
	});

	translator.getTranslatorObject(function (trans) {
		trans.itemType = detectWeb(doc, url);
		trans.doWeb(doc, url);
	});
}