function detectWeb(doc, url) {
	if (url.includes('/book/show/') && doc.querySelector('meta[property="books:isbn"]')) {
		return "book";
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}

function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('tr a.bookTitle');
	for (let row of rows) {
		let href = row.href;
		let title = ZU.trimInternal(row.textContent);
		if (!href || !title) continue;
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}

function doWeb(doc, url) {
	if (detectWeb(doc, url) == "multiple") {
		Zotero.selectItems(getSearchResults(doc, false), function (items) {
			if (items) ZU.processDocuments(Object.keys(items), scrape);
		});
	}
	else {
		scrape(doc, url);
	}
}

function scrape(doc, _url) {
	let ISBN = ZU.cleanISBN(attr(doc, 'meta[property="books:isbn"]', 'content'));
	
	// adapted from Amazon translator
	let search = Zotero.loadTranslator('search');
	
	search.setHandler('translators', function (_, translators) {
		search.setTranslator(translators);
		search.setHandler("itemDone", function (_, item) {
			Z.debug(`Found metadata in ${item.libraryCatalog}`);
			item.url = '';
			item.complete();
		});
		search.translate();
	});
	
	Z.debug(`Searching by ISBN: ${ISBN}`);
	search.setSearch({ ISBN });
	search.getTranslators();
}