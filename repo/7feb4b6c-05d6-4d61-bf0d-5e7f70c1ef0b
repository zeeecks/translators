function detectWeb(doc, url) {
	if (url.includes("/article/")) {		// does not handle /event/ or /media/ pages, which EM alone can handle
		if (text(doc, '.article-belongs-to-issue')) {
			return "magazineArticle";
		}
		else {
			return "blogPost";
		}
	}
	else if (getSearchResults(doc, true)) {
		return "multiple";
	}
	return false;
}


function scrape(doc, url) {
	var translator = Zotero.loadTranslator('web');
	translator.setTranslator('951c027d-74ac-47d4-a107-9c3069ab7b48'); // embedded metadata (EM)
	translator.setDocument(doc);
	
	translator.setHandler('itemDone', function (obj, item) { // corrections to EM
		item.title = attr(doc, 'meta[property="og:title"]', 'content') || item.title; // EM is putting " | Frieze" at the end
		item.publicationTitle = "Frieze";
		item.issue = text(doc, '.article-belongs-to-issue');
		if (item.issue) {
			item.itemType = "magazineArticle";
			item.ISSN = "0962-0672";
			item.issue = item.issue.replace('Issue ', '');
		}
		else {
			item.itemType = "blogPost";
		}
		item.date = text(doc, '.article-header-author-info').split('|')[1].trim();
		if (item.date) {
			// 21 -> 2021
			item.date = item.date.replace(/([0-9]{2})$/, '20$1');
			item.date = ZU.strToISO(item.date);
		}
		var authorMetadata = doc.querySelectorAll('.article-header-author-responsive a[href*="/contributor/"]');
		for (let author of authorMetadata) {
			item.creators.push(ZU.cleanAuthor(author.text, "author"));
		}
		item.tags = []; // the only tag is "premium"
		if (item.abstractNote) {
			item.abstractNote = item.abstractNote.replace(/, Frieze$/, '');
		}
		item.complete();
	});

	translator.getTranslatorObject(function (trans) {
		trans.doWeb(doc, url);
	});
}


function getSearchResults(doc, checkOnly) {
	var items = {};
	var found = false;
	var rows = doc.querySelectorAll('.teaser-title a[href*="/article/"]');
	for (let i = 0; i < rows.length; i++) {
		let href = rows[i].href;
		let title = ZU.trimInternal(rows[i].textContent);
		if (!href || !title) continue;
		if (/\/(event|media)\//.test(href)) continue; // scrap items that link to /event/ or /media/ pages
		if (checkOnly) return true;
		found = true;
		items[href] = title;
	}
	return found ? items : false;
}


function doWeb(doc, url) {
	switch (detectWeb(doc, url)) {
		case "multiple":
			Zotero.selectItems(getSearchResults(doc, false), function (items) {
				if (!items) {
					return;
				}
				var articles = [];
				for (var i in items) {
					articles.push(i);
				}
				ZU.processDocuments(articles, scrape);
			});
			break;
		case "magazineArticle":
		case "blogPost":
			scrape(doc, url);
			break;
	}
}